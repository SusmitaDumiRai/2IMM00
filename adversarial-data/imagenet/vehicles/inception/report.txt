nb_test: 40
correct: 16
correct_fgm: 5
correct_pgd: 7
correct_l2: 0
correct_hop_skip: 0
correct_noise: 15
correct_semantic: 4
correct_l1: 15
correct_spsa: 0
y_pred: [tensor([724], device='cuda:0'), tensor([416], device='cuda:0'), tensor([705], device='cuda:0'), tensor([444], device='cuda:0'), tensor([802], device='cuda:0'), tensor([468], device='cuda:0'), tensor([802], device='cuda:0'), tensor([554], device='cuda:0'), tensor([627], device='cuda:0'), tensor([468], device='cuda:0'), tensor([627], device='cuda:0'), tensor([484], device='cuda:0'), tensor([847], device='cuda:0'), tensor([468], device='cuda:0'), tensor([468], device='cuda:0'), tensor([468], device='cuda:0'), tensor([436], device='cuda:0'), tensor([724], device='cuda:0'), tensor([573], device='cuda:0'), tensor([727], device='cuda:0'), tensor([627], device='cuda:0'), tensor([802], device='cuda:0'), tensor([586], device='cuda:0'), tensor([891], device='cuda:0'), tensor([656], device='cuda:0'), tensor([675], device='cuda:0'), tensor([627], device='cuda:0'), tensor([878], device='cuda:0'), tensor([780], device='cuda:0'), tensor([468], device='cuda:0'), tensor([472], device='cuda:0'), tensor([865], device='cuda:0'), tensor([408], device='cuda:0'), tensor([450], device='cuda:0'), tensor([428], device='cuda:0'), tensor([511], device='cuda:0'), tensor([627], device='cuda:0'), tensor([847], device='cuda:0'), tensor([609], device='cuda:0'), tensor([847], device='cuda:0')]
y_pred_fgm: [tensor([50], device='cuda:0'), tensor([382], device='cuda:0'), tensor([875], device='cuda:0'), tensor([847], device='cuda:0'), tensor([214], device='cuda:0'), tensor([609], device='cuda:0'), tensor([703], device='cuda:0'), tensor([415], device='cuda:0'), tensor([662], device='cuda:0'), tensor([609], device='cuda:0'), tensor([656], device='cuda:0'), tensor([814], device='cuda:0'), tensor([996], device='cuda:0'), tensor([751], device='cuda:0'), tensor([734], device='cuda:0'), tensor([751], device='cuda:0'), tensor([757], device='cuda:0'), tensor([913], device='cuda:0'), tensor([746], device='cuda:0'), tensor([847], device='cuda:0'), tensor([609], device='cuda:0'), tensor([870], device='cuda:0'), tensor([848], device='cuda:0'), tensor([606], device='cuda:0'), tensor([436], device='cuda:0'), tensor([761], device='cuda:0'), tensor([656], device='cuda:0'), tensor([847], device='cuda:0'), tensor([478], device='cuda:0'), tensor([407], device='cuda:0'), tensor([472], device='cuda:0'), tensor([49], device='cuda:0'), tensor([573], device='cuda:0'), tensor([570], device='cuda:0'), tensor([674], device='cuda:0'), tensor([627], device='cuda:0'), tensor([485], device='cuda:0'), tensor([408], device='cuda:0'), tensor([627], device='cuda:0'), tensor([408], device='cuda:0')]
y_pred_pgd: [tensor([802], device='cuda:0'), tensor([382], device='cuda:0'), tensor([875], device='cuda:0'), tensor([847], device='cuda:0'), tensor([555], device='cuda:0'), tensor([609], device='cuda:0'), tensor([24], device='cuda:0'), tensor([579], device='cuda:0'), tensor([919], device='cuda:0'), tensor([609], device='cuda:0'), tensor([867], device='cuda:0'), tensor([378], device='cuda:0'), tensor([50], device='cuda:0'), tensor([803], device='cuda:0'), tensor([734], device='cuda:0'), tensor([436], device='cuda:0'), tensor([848], device='cuda:0'), tensor([554], device='cuda:0'), tensor([670], device='cuda:0'), tensor([490], device='cuda:0'), tensor([436], device='cuda:0'), tensor([612], device='cuda:0'), tensor([439], device='cuda:0'), tensor([606], device='cuda:0'), tensor([627], device='cuda:0'), tensor([751], device='cuda:0'), tensor([734], device='cuda:0'), tensor([847], device='cuda:0'), tensor([536], device='cuda:0'), tensor([407], device='cuda:0'), tensor([523], device='cuda:0'), tensor([586], device='cuda:0'), tensor([820], device='cuda:0'), tensor([50], device='cuda:0'), tensor([802], device='cuda:0'), tensor([627], device='cuda:0'), tensor([480], device='cuda:0'), tensor([408], device='cuda:0'), tensor([627], device='cuda:0'), tensor([408], device='cuda:0')]
y_pred_l2: []
y_pred_hop_skip: []
y_pred_noise: [tensor([408], device='cuda:0'), tensor([702], device='cuda:0'), tensor([481], device='cuda:0'), tensor([856], device='cuda:0'), tensor([802], device='cuda:0'), tensor([468], device='cuda:0'), tensor([802], device='cuda:0'), tensor([449], device='cuda:0'), tensor([627], device='cuda:0'), tensor([468], device='cuda:0'), tensor([627], device='cuda:0'), tensor([814], device='cuda:0'), tensor([586], device='cuda:0'), tensor([803], device='cuda:0'), tensor([468], device='cuda:0'), tensor([468], device='cuda:0'), tensor([848], device='cuda:0'), tensor([554], device='cuda:0'), tensor([670], device='cuda:0'), tensor([727], device='cuda:0'), tensor([627], device='cuda:0'), tensor([802], device='cuda:0'), tensor([586], device='cuda:0'), tensor([891], device='cuda:0'), tensor([656], device='cuda:0'), tensor([654], device='cuda:0'), tensor([627], device='cuda:0'), tensor([586], device='cuda:0'), tensor([536], device='cuda:0'), tensor([407], device='cuda:0'), tensor([472], device='cuda:0'), tensor([847], device='cuda:0'), tensor([408], device='cuda:0'), tensor([206], device='cuda:0'), tensor([428], device='cuda:0'), tensor([511], device='cuda:0'), tensor([627], device='cuda:0'), tensor([847], device='cuda:0'), tensor([609], device='cuda:0'), tensor([847], device='cuda:0')]
y_pred_semantic: [tensor([871], device='cuda:0'), tensor([456], device='cuda:0'), tensor([705], device='cuda:0'), tensor([534], device='cuda:0'), tensor([611], device='cuda:0'), tensor([786], device='cuda:0'), tensor([794], device='cuda:0'), tensor([526], device='cuda:0'), tensor([868], device='cuda:0'), tensor([627], device='cuda:0'), tensor([627], device='cuda:0'), tensor([780], device='cuda:0'), tensor([448], device='cuda:0'), tensor([898], device='cuda:0'), tensor([734], device='cuda:0'), tensor([511], device='cuda:0'), tensor([848], device='cuda:0'), tensor([628], device='cuda:0'), tensor([788], device='cuda:0'), tensor([724], device='cuda:0'), tensor([627], device='cuda:0'), tensor([443], device='cuda:0'), tensor([487], device='cuda:0'), tensor([830], device='cuda:0'), tensor([511], device='cuda:0'), tensor([560], device='cuda:0'), tensor([751], device='cuda:0'), tensor([628], device='cuda:0'), tensor([871], device='cuda:0'), tensor([751], device='cuda:0'), tensor([472], device='cuda:0'), tensor([831], device='cuda:0'), tensor([871], device='cuda:0'), tensor([719], device='cuda:0'), tensor([674], device='cuda:0'), tensor([627], device='cuda:0'), tensor([713], device='cuda:0'), tensor([431], device='cuda:0'), tensor([627], device='cuda:0'), tensor([408], device='cuda:0')]
y_pred_l1: [tensor([814], device='cuda:0'), tensor([602], device='cuda:0'), tensor([593], device='cuda:0'), tensor([586], device='cuda:0'), tensor([670], device='cuda:0'), tensor([468], device='cuda:0'), tensor([450], device='cuda:0'), tensor([449], device='cuda:0'), tensor([627], device='cuda:0'), tensor([468], device='cuda:0'), tensor([627], device='cuda:0'), tensor([484], device='cuda:0'), tensor([116], device='cuda:0'), tensor([468], device='cuda:0'), tensor([734], device='cuda:0'), tensor([468], device='cuda:0'), tensor([627], device='cuda:0'), tensor([724], device='cuda:0'), tensor([573], device='cuda:0'), tensor([727], device='cuda:0'), tensor([627], device='cuda:0'), tensor([802], device='cuda:0'), tensor([586], device='cuda:0'), tensor([606], device='cuda:0'), tensor([656], device='cuda:0'), tensor([675], device='cuda:0'), tensor([468], device='cuda:0'), tensor([878], device='cuda:0'), tensor([871], device='cuda:0'), tensor([468], device='cuda:0'), tensor([472], device='cuda:0'), tensor([865], device='cuda:0'), tensor([408], device='cuda:0'), tensor([802], device='cuda:0'), tensor([314], device='cuda:0'), tensor([511], device='cuda:0'), tensor([627], device='cuda:0'), tensor([847], device='cuda:0'), tensor([609], device='cuda:0'), tensor([847], device='cuda:0')]
y_pred_spsa: []
time: [0.09099984169006348, 2.256512403488159, 0.010999917984008789, 0.010000228881835938, 0.8821995258331299, 0.09300041198730469, 2.0850000381469727, 0.011000394821166992, 0.010999202728271484, 0.9868323802947998, 0.09400010108947754, 2.279001474380493, 0.010999917984008789, 0.010999202728271484, 1.0072417259216309, 0.09999966621398926, 2.0850017070770264, 0.010001897811889648, 0.010001659393310547, 0.8865776062011719, 0.09299898147583008, 2.0909993648529053, 0.010000467300415039, 0.009999752044677734, 0.8864452838897705, 0.09400010108947754, 2.1200006008148193, 0.011000394821166992, 0.01000070571899414, 0.8951067924499512, 0.10899877548217773, 2.139000654220581, 0.009999990463256836, 0.009999752044677734, 0.8921372890472412, 0.09399890899658203, 2.0820000171661377, 0.009999752044677734, 0.009999752044677734, 0.8808927536010742, 0.09399962425231934, 2.079998254776001, 0.010000944137573242, 0.010000228881835938, 0.8844277858734131, 0.09400010108947754, 2.0799994468688965, 0.010999917984008789, 0.010000228881835938, 0.8848578929901123, 0.09299969673156738, 2.0819997787475586, 0.009999275207519531, 0.010000467300415039, 0.886267900466919, 0.09299993515014648, 2.0940003395080566, 0.011001825332641602, 0.01000070571899414, 0.8847620487213135, 0.09300065040588379, 2.080005168914795, 0.01000070571899414, 0.010000467300415039, 0.8861908912658691, 0.09400033950805664, 2.080000400543213, 0.010001659393310547, 0.010001659393310547, 0.8867201805114746, 0.09400105476379395, 2.0790088176727295, 0.009999752044677734, 0.009999990463256836, 0.8936126232147217, 0.09300065040588379, 2.0819997787475586, 0.009999990463256836, 0.010000228881835938, 0.8922827243804932, 0.09499979019165039, 2.1180403232574463, 0.010000228881835938, 0.010000944137573242, 0.9179773330688477, 0.1139988899230957, 2.2451422214508057, 0.014002084732055664, 0.01499629020690918, 0.9710586071014404, 0.0950019359588623, 2.213009834289551, 0.011000633239746094, 0.010000228881835938, 0.8953654766082764, 0.09599995613098145, 2.0971858501434326, 0.010999441146850586, 0.011000394821166992, 0.8899405002593994, 0.0950002670288086, 2.0900022983551025, 0.009999513626098633, 0.010000228881835938, 0.8975307941436768, 0.09400033950805664, 2.1040029525756836, 0.009999990463256836, 0.010000228881835938, 0.8885095119476318, 0.09400057792663574, 2.1409997940063477, 0.010999679565429688, 0.01100015640258789, 0.9787676334381104, 0.09400033950805664, 2.1609625816345215, 0.009999990463256836, 0.009999752044677734, 0.9116687774658203, 0.09399771690368652, 2.149000406265259, 0.010999441146850586, 0.010999679565429688, 0.9089035987854004, 0.10202383995056152, 2.181001663208008, 0.010001659393310547, 0.011002302169799805, 0.9202694892883301, 0.10000109672546387, 2.125999689102173, 0.01100015640258789, 0.010000228881835938, 0.9502859115600586, 0.09399938583374023, 2.1455118656158447, 0.010000944137573242, 0.009999275207519531, 0.9175755977630615, 0.09399962425231934, 2.2151601314544678, 0.0110015869140625, 0.009999990463256836, 0.9028313159942627, 0.09400105476379395, 2.1540544033050537, 0.011000871658325195, 0.010001420974731445, 0.9442703723907471, 0.09400010108947754, 2.158513307571411, 0.010999441146850586, 0.010000228881835938, 0.8937983512878418, 0.09600090980529785, 2.1510000228881836, 0.010000228881835938, 0.009999752044677734, 0.924372673034668, 0.09399962425231934, 2.18999981880188, 0.010002374649047852, 0.010001182556152344, 0.9097244739532471, 0.0950016975402832, 2.109515905380249, 0.009999513626098633, 0.010001182556152344, 0.9093680381774902, 0.10200095176696777, 2.1840007305145264, 0.011000633239746094, 0.010998725891113281, 0.9386546611785889, 0.09399962425231934, 2.20999813079834, 0.010000228881835938, 0.009999752044677734, 0.9243659973144531, 0.09299921989440918, 2.176516056060791, 0.010998725891113281, 0.01000070571899414, 0.9181725978851318, 0.09399938583374023, 2.1555111408233643, 0.009999990463256836, 0.009999275207519531, 0.9583456516265869, 0.09300088882446289, 2.172030210494995, 0.010999441146850586, 0.009999513626098633, 0.9018039703369141, 0.09600019454956055, 2.139512300491333, 0.010296344757080078, 0.010001420974731445, 0.9263603687286377]
funcs_tested: 0
test acc on clean examples (%): 40.00
test acc on FGM adversarial examples (%): 12.50
test acc on PGD adversarial examples (%): 17.50
test acc on L2 adversarial examples (%): 0.00
test acc on HOP-SKIP-JUMP adversarial examples (%): 0.00
test acc on NOISE adversarial examples (%): 37.50
test acc on SEMANTIC adversarial examples (%): 10.00
test acc on L1 adversarial examples (%): 37.50
test acc on SPSA adversarial examples (%): 0.00

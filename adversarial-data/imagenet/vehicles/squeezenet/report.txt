nb_test: 40
correct: 10
correct_fgm: 0
correct_pgd: 0
correct_l2: 0
correct_hop_skip: 0
correct_noise: 7
correct_semantic: 3
correct_l1: 10
correct_spsa: 0
y_pred: [tensor([436], device='cuda:0'), tensor([450], device='cuda:0'), tensor([812], device='cuda:0'), tensor([627], device='cuda:0'), tensor([472], device='cuda:0'), tensor([796], device='cuda:0'), tensor([573], device='cuda:0'), tensor([468], device='cuda:0'), tensor([491], device='cuda:0'), tensor([717], device='cuda:0'), tensor([627], device='cuda:0'), tensor([656], device='cuda:0'), tensor([847], device='cuda:0'), tensor([464], device='cuda:0'), tensor([565], device='cuda:0'), tensor([468], device='cuda:0'), tensor([403], device='cuda:0'), tensor([772], device='cuda:0'), tensor([979], device='cuda:0'), tensor([563], device='cuda:0'), tensor([554], device='cuda:0'), tensor([403], device='cuda:0'), tensor([531], device='cuda:0'), tensor([675], device='cuda:0'), tensor([405], device='cuda:0'), tensor([847], device='cuda:0'), tensor([761], device='cuda:0'), tensor([439], device='cuda:0'), tensor([847], device='cuda:0'), tensor([490], device='cuda:0'), tensor([468], device='cuda:0'), tensor([741], device='cuda:0'), tensor([802], device='cuda:0'), tensor([468], device='cuda:0'), tensor([871], device='cuda:0'), tensor([468], device='cuda:0'), tensor([757], device='cuda:0'), tensor([536], device='cuda:0'), tensor([779], device='cuda:0'), tensor([781], device='cuda:0')]
y_pred_fgm: [tensor([611], device='cuda:0'), tensor([533], device='cuda:0'), tensor([911], device='cuda:0'), tensor([539], device='cuda:0'), tensor([533], device='cuda:0'), tensor([539], device='cuda:0'), tensor([658], device='cuda:0'), tensor([911], device='cuda:0'), tensor([496], device='cuda:0'), tensor([748], device='cuda:0'), tensor([748], device='cuda:0'), tensor([489], device='cuda:0'), tensor([825], device='cuda:0'), tensor([752], device='cuda:0'), tensor([533], device='cuda:0'), tensor([971], device='cuda:0'), tensor([611], device='cuda:0'), tensor([533], device='cuda:0'), tensor([824], device='cuda:0'), tensor([533], device='cuda:0'), tensor([611], device='cuda:0'), tensor([824], device='cuda:0'), tensor([414], device='cuda:0'), tensor([748], device='cuda:0'), tensor([646], device='cuda:0'), tensor([646], device='cuda:0'), tensor([904], device='cuda:0'), tensor([911], device='cuda:0'), tensor([611], device='cuda:0'), tensor([646], device='cuda:0'), tensor([911], device='cuda:0'), tensor([912], device='cuda:0'), tensor([611], device='cuda:0'), tensor([533], device='cuda:0'), tensor([911], device='cuda:0'), tensor([658], device='cuda:0'), tensor([709], device='cuda:0'), tensor([611], device='cuda:0'), tensor([911], device='cuda:0'), tensor([533], device='cuda:0')]
y_pred_pgd: [tensor([390], device='cuda:0'), tensor([508], device='cuda:0'), tensor([761], device='cuda:0'), tensor([791], device='cuda:0'), tensor([418], device='cuda:0'), tensor([539], device='cuda:0'), tensor([611], device='cuda:0'), tensor([477], device='cuda:0'), tensor([496], device='cuda:0'), tensor([53], device='cuda:0'), tensor([428], device='cuda:0'), tensor([662], device='cuda:0'), tensor([497], device='cuda:0'), tensor([835], device='cuda:0'), tensor([913], device='cuda:0'), tensor([748], device='cuda:0'), tensor([469], device='cuda:0'), tensor([685], device='cuda:0'), tensor([289], device='cuda:0'), tensor([681], device='cuda:0'), tensor([498], device='cuda:0'), tensor([50], device='cuda:0'), tensor([414], device='cuda:0'), tensor([508], device='cuda:0'), tensor([663], device='cuda:0'), tensor([508], device='cuda:0'), tensor([974], device='cuda:0'), tensor([685], device='cuda:0'), tensor([477], device='cuda:0'), tensor([821], device='cuda:0'), tensor([796], device='cuda:0'), tensor([821], device='cuda:0'), tensor([395], device='cuda:0'), tensor([854], device='cuda:0'), tensor([372], device='cuda:0'), tensor([530], device='cuda:0'), tensor([620], device='cuda:0'), tensor([428], device='cuda:0'), tensor([784], device='cuda:0'), tensor([659], device='cuda:0')]
y_pred_l2: []
y_pred_hop_skip: []
y_pred_noise: [tensor([511], device='cuda:0'), tensor([508], device='cuda:0'), tensor([593], device='cuda:0'), tensor([627], device='cuda:0'), tensor([693], device='cuda:0'), tensor([796], device='cuda:0'), tensor([611], device='cuda:0'), tensor([468], device='cuda:0'), tensor([496], device='cuda:0'), tensor([717], device='cuda:0'), tensor([627], device='cuda:0'), tensor([581], device='cuda:0'), tensor([847], device='cuda:0'), tensor([464], device='cuda:0'), tensor([913], device='cuda:0'), tensor([704], device='cuda:0'), tensor([403], device='cuda:0'), tensor([677], device='cuda:0'), tensor([289], device='cuda:0'), tensor([563], device='cuda:0'), tensor([498], device='cuda:0'), tensor([50], device='cuda:0'), tensor([732], device='cuda:0'), tensor([704], device='cuda:0'), tensor([663], device='cuda:0'), tensor([508], device='cuda:0'), tensor([761], device='cuda:0'), tensor([398], device='cuda:0'), tensor([847], device='cuda:0'), tensor([912], device='cuda:0'), tensor([468], device='cuda:0'), tensor([821], device='cuda:0'), tensor([803], device='cuda:0'), tensor([498], device='cuda:0'), tensor([685], device='cuda:0'), tensor([530], device='cuda:0'), tensor([498], device='cuda:0'), tensor([536], device='cuda:0'), tensor([468], device='cuda:0'), tensor([480], device='cuda:0')]
y_pred_semantic: [tensor([436], device='cuda:0'), tensor([29], device='cuda:0'), tensor([593], device='cuda:0'), tensor([436], device='cuda:0'), tensor([404], device='cuda:0'), tensor([148], device='cuda:0'), tensor([691], device='cuda:0'), tensor([436], device='cuda:0'), tensor([562], device='cuda:0'), tensor([609], device='cuda:0'), tensor([627], device='cuda:0'), tensor([896], device='cuda:0'), tensor([847], device='cuda:0'), tensor([633], device='cuda:0'), tensor([726], device='cuda:0'), tensor([897], device='cuda:0'), tensor([847], device='cuda:0'), tensor([726], device='cuda:0'), tensor([126], device='cuda:0'), tensor([905], device='cuda:0'), tensor([648], device='cuda:0'), tensor([977], device='cuda:0'), tensor([844], device='cuda:0'), tensor([481], device='cuda:0'), tensor([663], device='cuda:0'), tensor([408], device='cuda:0'), tensor([592], device='cuda:0'), tensor([684], device='cuda:0'), tensor([588], device='cuda:0'), tensor([831], device='cuda:0'), tensor([786], device='cuda:0'), tensor([663], device='cuda:0'), tensor([623], device='cuda:0'), tensor([800], device='cuda:0'), tensor([726], device='cuda:0'), tensor([786], device='cuda:0'), tensor([786], device='cuda:0'), tensor([534], device='cuda:0'), tensor([680], device='cuda:0'), tensor([549], device='cuda:0')]
y_pred_l1: [tensor([511], device='cuda:0'), tensor([450], device='cuda:0'), tensor([812], device='cuda:0'), tensor([627], device='cuda:0'), tensor([472], device='cuda:0'), tensor([796], device='cuda:0'), tensor([573], device='cuda:0'), tensor([468], device='cuda:0'), tensor([802], device='cuda:0'), tensor([717], device='cuda:0'), tensor([627], device='cuda:0'), tensor([436], device='cuda:0'), tensor([847], device='cuda:0'), tensor([409], device='cuda:0'), tensor([565], device='cuda:0'), tensor([468], device='cuda:0'), tensor([403], device='cuda:0'), tensor([481], device='cuda:0'), tensor([465], device='cuda:0'), tensor([627], device='cuda:0'), tensor([555], device='cuda:0'), tensor([970], device='cuda:0'), tensor([707], device='cuda:0'), tensor([675], device='cuda:0'), tensor([821], device='cuda:0'), tensor([847], device='cuda:0'), tensor([761], device='cuda:0'), tensor([80], device='cuda:0'), tensor([847], device='cuda:0'), tensor([821], device='cuda:0'), tensor([468], device='cuda:0'), tensor([741], device='cuda:0'), tensor([803], device='cuda:0'), tensor([468], device='cuda:0'), tensor([149], device='cuda:0'), tensor([627], device='cuda:0'), tensor([757], device='cuda:0'), tensor([536], device='cuda:0'), tensor([779], device='cuda:0'), tensor([868], device='cuda:0')]
y_pred_spsa: []
time: [0.013000249862670898, 0.312000036239624, 0.00299835205078125, 0.0020003318786621094, 0.10399961471557617, 0.011999368667602539, 0.30300068855285645, 0.0029993057250976562, 0.0020003318786621094, 0.10500001907348633, 0.012998104095458984, 0.3039994239807129, 0.003000020980834961, 0.0020020008087158203, 0.10499978065490723, 0.011999845504760742, 0.3039999008178711, 0.003000020980834961, 0.0020008087158203125, 0.10504364967346191, 0.011999130249023438, 0.307999849319458, 0.0030007362365722656, 0.002001047134399414, 0.10499811172485352, 0.011998891830444336, 0.3040006160736084, 0.0020012855529785156, 0.002997875213623047, 0.10500073432922363, 0.01099848747253418, 0.3020017147064209, 0.0029981136322021484, 0.0020003318786621094, 0.10399866104125977, 0.01299738883972168, 0.30699992179870605, 0.003000020980834961, 0.0019998550415039062, 0.10400009155273438, 0.012000083923339844, 0.3060002326965332, 0.0029990673065185547, 0.0020003318786621094, 0.1120004653930664, 0.012998342514038086, 0.3360011577606201, 0.002000093460083008, 0.002000093460083008, 0.11028146743774414, 0.012999296188354492, 0.3449997901916504, 0.0020008087158203125, 0.0019989013671875, 0.1210014820098877, 0.01299738883972168, 0.34600019454956055, 0.002000093460083008, 0.002001523971557617, 0.11999940872192383, 0.014998912811279297, 0.31699538230895996, 0.002001047134399414, 0.0019998550415039062, 0.11799955368041992, 0.012000799179077148, 0.3409993648529053, 0.001999378204345703, 0.001998424530029297, 0.11799740791320801, 0.012000083923339844, 0.3060011863708496, 0.0019986629486083984, 0.002000570297241211, 0.10700058937072754, 0.012002229690551758, 0.3099982738494873, 0.0030002593994140625, 0.0019991397857666016, 0.10900259017944336, 0.012001514434814453, 0.30900001525878906, 0.003000020980834961, 0.0019998550415039062, 0.10999846458435059, 0.012999773025512695, 0.31099915504455566, 0.0020029544830322266, 0.0019991397857666016, 0.11251568794250488, 0.012998580932617188, 0.31100010871887207, 0.002002239227294922, 0.0019991397857666016, 0.12403130531311035, 0.012001514434814453, 0.3445892333984375, 0.0030014514923095703, 0.001998424530029297, 0.10954499244689941, 0.011998653411865234, 0.31000304222106934, 0.003999233245849609, 0.002997875213623047, 0.1115121841430664, 0.01199960708618164, 0.31100034713745117, 0.0020003318786621094, 0.0019989013671875, 0.10799908638000488, 0.011998653411865234, 0.3240208625793457, 0.0020012855529785156, 0.0020008087158203125, 0.12017130851745605, 0.013999462127685547, 0.3390004634857178, 0.0020003318786621094, 0.0019998550415039062, 0.12256884574890137, 0.013001680374145508, 0.3059971332550049, 0.0030012130737304688, 0.0019991397857666016, 0.10499978065490723, 0.011998891830444336, 0.3120002746582031, 0.003000020980834961, 0.002000570297241211, 0.10399961471557617, 0.012000322341918945, 0.3019990921020508, 0.003000020980834961, 0.002000093460083008, 0.10600042343139648, 0.013000249862670898, 0.30499935150146484, 0.002000093460083008, 0.003000974655151367, 0.10499858856201172, 0.01199960708618164, 0.33299970626831055, 0.001999378204345703, 0.0029997825622558594, 0.12299966812133789, 0.012999773025512695, 0.3390004634857178, 0.002000570297241211, 0.002001047134399414, 0.11600065231323242, 0.01199960708618164, 0.30300068855285645, 0.001999378204345703, 0.0019998550415039062, 0.10600018501281738, 0.01299905776977539, 0.30300021171569824, 0.0019991397857666016, 0.0030028820037841797, 0.10399723052978516, 0.011999130249023438, 0.30700016021728516, 0.003000020980834961, 0.0019998550415039062, 0.10500025749206543, 0.012000322341918945, 0.303999662399292, 0.002000570297241211, 0.0029997825622558594, 0.10400032997131348, 0.011999130249023438, 0.30300045013427734, 0.0030002593994140625, 0.0019998550415039062, 0.10499978065490723, 0.012000322341918945, 0.3039991855621338, 0.002000093460083008, 0.003000020980834961, 0.10500025749206543, 0.012999534606933594, 0.3039994239807129, 0.003000974655151367, 0.0030012130737304688, 0.10399794578552246, 0.011999130249023438, 0.31000256538391113, 0.001997232437133789, 0.0019996166229248047, 0.10799956321716309, 0.012001752853393555, 0.3110010623931885, 0.00299835205078125, 0.0019991397857666016, 0.10499882698059082, 0.013000011444091797, 0.32000041007995605, 0.0029997825622558594, 0.0020020008087158203, 0.11799955368041992]
funcs_tested: 0
test acc on clean examples (%): 25.00
test acc on FGM adversarial examples (%): 0.00
test acc on PGD adversarial examples (%): 0.00
test acc on L2 adversarial examples (%): 0.00
test acc on HOP-SKIP-JUMP adversarial examples (%): 0.00
test acc on NOISE adversarial examples (%): 17.50
test acc on SEMANTIC adversarial examples (%): 7.50
test acc on L1 adversarial examples (%): 25.00
test acc on SPSA adversarial examples (%): 0.00

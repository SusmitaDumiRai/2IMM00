nb_test: 40
correct: 19
correct_fgm: 2
correct_pgd: 1
correct_l2: 0
correct_hop_skip: 0
correct_noise: 10
correct_semantic: 6
correct_l1: 13
correct_spsa: 0
y_pred: [tensor([436], device='cuda:0'), tensor([468], device='cuda:0'), tensor([802], device='cuda:0'), tensor([571], device='cuda:0'), tensor([814], device='cuda:0'), tensor([468], device='cuda:0'), tensor([802], device='cuda:0'), tensor([802], device='cuda:0'), tensor([675], device='cuda:0'), tensor([450], device='cuda:0'), tensor([814], device='cuda:0'), tensor([627], device='cuda:0'), tensor([409], device='cuda:0'), tensor([536], device='cuda:0'), tensor([468], device='cuda:0'), tensor([814], device='cuda:0'), tensor([468], device='cuda:0'), tensor([627], device='cuda:0'), tensor([821], device='cuda:0'), tensor([814], device='cuda:0'), tensor([646], device='cuda:0'), tensor([812], device='cuda:0'), tensor([519], device='cuda:0'), tensor([895], device='cuda:0'), tensor([554], device='cuda:0'), tensor([847], device='cuda:0'), tensor([847], device='cuda:0'), tensor([802], device='cuda:0'), tensor([627], device='cuda:0'), tensor([627], device='cuda:0'), tensor([468], device='cuda:0'), tensor([802], device='cuda:0'), tensor([536], device='cuda:0'), tensor([751], device='cuda:0'), tensor([465], device='cuda:0'), tensor([627], device='cuda:0'), tensor([405], device='cuda:0'), tensor([581], device='cuda:0'), tensor([656], device='cuda:0'), tensor([761], device='cuda:0')]
y_pred_fgm: [tensor([586], device='cuda:0'), tensor([586], device='cuda:0'), tensor([824], device='cuda:0'), tensor([414], device='cuda:0'), tensor([434], device='cuda:0'), tensor([751], device='cuda:0'), tensor([735], device='cuda:0'), tensor([586], device='cuda:0'), tensor([709], device='cuda:0'), tensor([214], device='cuda:0'), tensor([434], device='cuda:0'), tensor([436], device='cuda:0'), tensor([33], device='cuda:0'), tensor([489], device='cuda:0'), tensor([481], device='cuda:0'), tensor([777], device='cuda:0'), tensor([656], device='cuda:0'), tensor([481], device='cuda:0'), tensor([599], device='cuda:0'), tensor([824], device='cuda:0'), tensor([599], device='cuda:0'), tensor([29], device='cuda:0'), tensor([646], device='cuda:0'), tensor([489], device='cuda:0'), tensor([565], device='cuda:0'), tensor([915], device='cuda:0'), tensor([847], device='cuda:0'), tensor([496], device='cuda:0'), tensor([609], device='cuda:0'), tensor([609], device='cuda:0'), tensor([779], device='cuda:0'), tensor([33], device='cuda:0'), tensor([885], device='cuda:0'), tensor([468], device='cuda:0'), tensor([106], device='cuda:0'), tensor([777], device='cuda:0'), tensor([50], device='cuda:0'), tensor([874], device='cuda:0'), tensor([492], device='cuda:0'), tensor([761], device='cuda:0')]
y_pred_pgd: [tensor([867], device='cuda:0'), tensor([847], device='cuda:0'), tensor([183], device='cuda:0'), tensor([414], device='cuda:0'), tensor([563], device='cuda:0'), tensor([609], device='cuda:0'), tensor([165], device='cuda:0'), tensor([602], device='cuda:0'), tensor([662], device='cuda:0'), tensor([110], device='cuda:0'), tensor([75], device='cuda:0'), tensor([734], device='cuda:0'), tensor([586], device='cuda:0'), tensor([852], device='cuda:0'), tensor([966], device='cuda:0'), tensor([70], device='cuda:0'), tensor([656], device='cuda:0'), tensor([407], device='cuda:0'), tensor([317], device='cuda:0'), tensor([4], device='cuda:0'), tensor([307], device='cuda:0'), tensor([688], device='cuda:0'), tensor([828], device='cuda:0'), tensor([546], device='cuda:0'), tensor([654], device='cuda:0'), tensor([428], device='cuda:0'), tensor([408], device='cuda:0'), tensor([496], device='cuda:0'), tensor([656], device='cuda:0'), tensor([717], device='cuda:0'), tensor([779], device='cuda:0'), tensor([395], device='cuda:0'), tensor([565], device='cuda:0'), tensor([468], device='cuda:0'), tensor([140], device='cuda:0'), tensor([659], device='cuda:0'), tensor([50], device='cuda:0'), tensor([565], device='cuda:0'), tensor([662], device='cuda:0'), tensor([141], device='cuda:0')]
y_pred_l2: []
y_pred_hop_skip: []
y_pred_noise: [tensor([717], device='cuda:0'), tensor([468], device='cuda:0'), tensor([803], device='cuda:0'), tensor([414], device='cuda:0'), tensor([814], device='cuda:0'), tensor([468], device='cuda:0'), tensor([652], device='cuda:0'), tensor([573], device='cuda:0'), tensor([480], device='cuda:0'), tensor([966], device='cuda:0'), tensor([475], device='cuda:0'), tensor([627], device='cuda:0'), tensor([586], device='cuda:0'), tensor([536], device='cuda:0'), tensor([468], device='cuda:0'), tensor([140], device='cuda:0'), tensor([468], device='cuda:0'), tensor([656], device='cuda:0'), tensor([410], device='cuda:0'), tensor([4], device='cuda:0'), tensor([489], device='cuda:0'), tensor([628], device='cuda:0'), tensor([835], device='cuda:0'), tensor([833], device='cuda:0'), tensor([554], device='cuda:0'), tensor([847], device='cuda:0'), tensor([847], device='cuda:0'), tensor([796], device='cuda:0'), tensor([656], device='cuda:0'), tensor([717], device='cuda:0'), tensor([468], device='cuda:0'), tensor([394], device='cuda:0'), tensor([565], device='cuda:0'), tensor([468], device='cuda:0'), tensor([20], device='cuda:0'), tensor([581], device='cuda:0'), tensor([50], device='cuda:0'), tensor([757], device='cuda:0'), tensor([656], device='cuda:0'), tensor([761], device='cuda:0')]
y_pred_semantic: [tensor([436], device='cuda:0'), tensor([466], device='cuda:0'), tensor([840], device='cuda:0'), tensor([732], device='cuda:0'), tensor([814], device='cuda:0'), tensor([751], device='cuda:0'), tensor([795], device='cuda:0'), tensor([691], device='cuda:0'), tensor([916], device='cuda:0'), tensor([289], device='cuda:0'), tensor([606], device='cuda:0'), tensor([627], device='cuda:0'), tensor([528], device='cuda:0'), tensor([871], device='cuda:0'), tensor([680], device='cuda:0'), tensor([726], device='cuda:0'), tensor([436], device='cuda:0'), tensor([627], device='cuda:0'), tensor([921], device='cuda:0'), tensor([726], device='cuda:0'), tensor([645], device='cuda:0'), tensor([438], device='cuda:0'), tensor([814], device='cuda:0'), tensor([895], device='cuda:0'), tensor([660], device='cuda:0'), tensor([847], device='cuda:0'), tensor([876], device='cuda:0'), tensor([741], device='cuda:0'), tensor([436], device='cuda:0'), tensor([627], device='cuda:0'), tensor([898], device='cuda:0'), tensor([895], device='cuda:0'), tensor([913], device='cuda:0'), tensor([742], device='cuda:0'), tensor([126], device='cuda:0'), tensor([905], device='cuda:0'), tensor([683], device='cuda:0'), tensor([627], device='cuda:0'), tensor([896], device='cuda:0'), tensor([683], device='cuda:0')]
y_pred_l1: [tensor([436], device='cuda:0'), tensor([468], device='cuda:0'), tensor([802], device='cuda:0'), tensor([571], device='cuda:0'), tensor([693], device='cuda:0'), tensor([468], device='cuda:0'), tensor([802], device='cuda:0'), tensor([573], device='cuda:0'), tensor([675], device='cuda:0'), tensor([802], device='cuda:0'), tensor([73], device='cuda:0'), tensor([627], device='cuda:0'), tensor([586], device='cuda:0'), tensor([536], device='cuda:0'), tensor([751], device='cuda:0'), tensor([814], device='cuda:0'), tensor([468], device='cuda:0'), tensor([627], device='cuda:0'), tensor([860], device='cuda:0'), tensor([814], device='cuda:0'), tensor([646], device='cuda:0'), tensor([812], device='cuda:0'), tensor([835], device='cuda:0'), tensor([895], device='cuda:0'), tensor([554], device='cuda:0'), tensor([847], device='cuda:0'), tensor([847], device='cuda:0'), tensor([197], device='cuda:0'), tensor([656], device='cuda:0'), tensor([627], device='cuda:0'), tensor([468], device='cuda:0'), tensor([895], device='cuda:0'), tensor([694], device='cuda:0'), tensor([751], device='cuda:0'), tensor([956], device='cuda:0'), tensor([563], device='cuda:0'), tensor([405], device='cuda:0'), tensor([757], device='cuda:0'), tensor([436], device='cuda:0'), tensor([761], device='cuda:0')]
y_pred_spsa: []
time: [0.03600311279296875, 1.3589982986450195, 0.0010023117065429688, 0.0009992122650146484, 0.04999995231628418, 0.04499959945678711, 1.351008415222168, 0.0020017623901367188, 0.0009999275207519531, 0.05099964141845703, 0.04700016975402832, 1.4345152378082275, 0.00099945068359375, 0.00099945068359375, 0.05000042915344238, 0.04500007629394531, 1.397512435913086, 0.002000570297241211, 0.002001523971557617, 0.05100274085998535, 0.04799938201904297, 1.3669991493225098, 0.0009999275207519531, 0.0010001659393310547, 0.04999995231628418, 0.04400062561035156, 1.351996660232544, 0.0010004043579101562, 0.0, 0.051000118255615234, 0.04499983787536621, 1.382000207901001, 0.0010004043579101562, 0.00099945068359375, 0.05099892616271973, 0.046000003814697266, 1.4190349578857422, 0.0009996891021728516, 0.0009996891021728516, 0.05100417137145996, 0.05200028419494629, 1.5269999504089355, 0.0010018348693847656, 0.0009999275207519531, 0.0540010929107666, 0.05699968338012695, 1.4780004024505615, 0.0020020008087158203, 0.0010008811950683594, 0.05300021171569824, 0.050894737243652344, 1.5129995346069336, 0.0010001659393310547, 0.0010001659393310547, 0.05200004577636719, 0.04638028144836426, 1.3440008163452148, 0.002000093460083008, 0.0010001659393310547, 0.04999995231628418, 0.048000335693359375, 1.345001220703125, 0.0010025501251220703, 0.0010004043579101562, 0.051001787185668945, 0.04499983787536621, 1.3490002155303955, 0.0010004043579101562, 0.0010001659393310547, 0.051000118255615234, 0.045000314712524414, 1.3530309200286865, 0.0010004043579101562, 0.0010004043579101562, 0.04999971389770508, 0.045000553131103516, 1.349133014678955, 0.0009996891021728516, 0.0010008811950683594, 0.05000019073486328, 0.04400014877319336, 1.4650013446807861, 0.00099945068359375, 0.0010008811950683594, 0.05099964141845703, 0.05699968338012695, 1.3990283012390137, 0.0009989738464355469, 0.0010004043579101562, 0.05000019073486328, 0.04602384567260742, 1.3480007648468018, 0.0010001659393310547, 0.0009970664978027344, 0.05000019073486328, 0.045999765396118164, 1.3480000495910645, 0.0009984970092773438, 0.0009996891021728516, 0.04799938201904297, 0.04399752616882324, 1.3503656387329102, 0.0010001659393310547, 0.0010006427764892578, 0.04999971389770508, 0.04499959945678711, 1.3480000495910645, 0.0010001659393310547, 0.0010004043579101562, 0.05000019073486328, 0.044000864028930664, 1.3570008277893066, 0.0009996891021728516, 0.0009975433349609375, 0.05099630355834961, 0.04700016975402832, 1.5269999504089355, 0.0010004043579101562, 0.0010001659393310547, 0.05200052261352539, 0.04500007629394531, 1.4261925220489502, 0.0010004043579101562, 0.0010001659393310547, 0.05100059509277344, 0.04500007629394531, 1.379000186920166, 0.0010013580322265625, 0.0009999275207519531, 0.04999828338623047, 0.05200338363647461, 1.3959994316101074, 0.0010020732879638672, 0.0010001659393310547, 0.053999900817871094, 0.04499936103820801, 1.3470001220703125, 0.0006506443023681641, 0.0009989738464355469, 0.049997806549072266, 0.046000003814697266, 1.446000337600708, 0.0010001659393310547, 0.001001119613647461, 0.050000667572021484, 0.04500007629394531, 1.3459997177124023, 0.0010001659393310547, 0.0010001659393310547, 0.05100083351135254, 0.04500150680541992, 1.4229099750518799, 0.0020003318786621094, 0.0009992122650146484, 0.05399966239929199, 0.048000335693359375, 1.5102388858795166, 0.0010001659393310547, 0.0009996891021728516, 0.050997018814086914, 0.053000450134277344, 1.5440294742584229, 0.002000093460083008, 0.0010001659393310547, 0.050002336502075195, 0.053026437759399414, 1.5079994201660156, 0.0009999275207519531, 0.0009999275207519531, 0.052004098892211914, 0.04499959945678711, 1.5773091316223145, 0.0010004043579101562, 0.0009980201721191406, 0.0520017147064209, 0.04451417922973633, 1.4290027618408203, 0.00099945068359375, 0.0010001659393310547, 0.05200052261352539, 0.058001041412353516, 1.3781790733337402, 0.0010004043579101562, 0.0009989738464355469, 0.05299997329711914, 0.04500079154968262, 1.4289870262145996, 0.0019998550415039062, 0.0009987354278564453, 0.05100083351135254, 0.04599928855895996, 1.3470005989074707, 0.0009996891021728516, 0.0009992122650146484, 0.0500025749206543, 0.04651284217834473, 1.3510000705718994, 0.0009999275207519531, 0.0009996891021728516, 0.04999732971191406]
funcs_tested: 0
test acc on clean examples (%): 47.50
test acc on FGM adversarial examples (%): 5.00
test acc on PGD adversarial examples (%): 2.50
test acc on L2 adversarial examples (%): 0.00
test acc on HOP-SKIP-JUMP adversarial examples (%): 0.00
test acc on NOISE adversarial examples (%): 25.00
test acc on SEMANTIC adversarial examples (%): 15.00
test acc on L1 adversarial examples (%): 32.50
test acc on SPSA adversarial examples (%): 0.00

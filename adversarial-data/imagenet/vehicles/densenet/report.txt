nb_test: 40
correct: 19
correct_fgm: 4
correct_pgd: 5
correct_l2: 0
correct_hop_skip: 0
correct_noise: 19
correct_semantic: 8
correct_l1: 20
correct_spsa: 0
y_pred: [tensor([586], device='cuda:0'), tensor([472], device='cuda:0'), tensor([847], device='cuda:0'), tensor([802], device='cuda:0'), tensor([913], device='cuda:0'), tensor([820], device='cuda:0'), tensor([847], device='cuda:0'), tensor([847], device='cuda:0'), tensor([802], device='cuda:0'), tensor([436], device='cuda:0'), tensor([481], device='cuda:0'), tensor([670], device='cuda:0'), tensor([778], device='cuda:0'), tensor([468], device='cuda:0'), tensor([468], device='cuda:0'), tensor([646], device='cuda:0'), tensor([802], device='cuda:0'), tensor([780], device='cuda:0'), tensor([436], device='cuda:0'), tensor([468], device='cuda:0'), tensor([436], device='cuda:0'), tensor([913], device='cuda:0'), tensor([468], device='cuda:0'), tensor([627], device='cuda:0'), tensor([468], device='cuda:0'), tensor([554], device='cuda:0'), tensor([627], device='cuda:0'), tensor([802], device='cuda:0'), tensor([627], device='cuda:0'), tensor([593], device='cuda:0'), tensor([148], device='cuda:0'), tensor([468], device='cuda:0'), tensor([814], device='cuda:0'), tensor([586], device='cuda:0'), tensor([450], device='cuda:0'), tensor([573], device='cuda:0'), tensor([627], device='cuda:0'), tensor([913], device='cuda:0'), tensor([627], device='cuda:0'), tensor([627], device='cuda:0')]
y_pred_fgm: [tensor([866], device='cuda:0'), tensor([814], device='cuda:0'), tensor([408], device='cuda:0'), tensor([913], device='cuda:0'), tensor([586], device='cuda:0'), tensor([878], device='cuda:0'), tensor([661], device='cuda:0'), tensor([408], device='cuda:0'), tensor([670], device='cuda:0'), tensor([656], device='cuda:0'), tensor([770], device='cuda:0'), tensor([741], device='cuda:0'), tensor([800], device='cuda:0'), tensor([609], device='cuda:0'), tensor([734], device='cuda:0'), tensor([586], device='cuda:0'), tensor([75], device='cuda:0'), tensor([408], device='cuda:0'), tensor([609], device='cuda:0'), tensor([656], device='cuda:0'), tensor([867], device='cuda:0'), tensor([465], device='cuda:0'), tensor([468], device='cuda:0'), tensor([620], device='cuda:0'), tensor([751], device='cuda:0'), tensor([561], device='cuda:0'), tensor([656], device='cuda:0'), tensor([764], device='cuda:0'), tensor([468], device='cuda:0'), tensor([913], device='cuda:0'), tensor([801], device='cuda:0'), tensor([436], device='cuda:0'), tensor([565], device='cuda:0'), tensor([310], device='cuda:0'), tensor([797], device='cuda:0'), tensor([802], device='cuda:0'), tensor([539], device='cuda:0'), tensor([569], device='cuda:0'), tensor([436], device='cuda:0'), tensor([511], device='cuda:0')]
y_pred_pgd: [tensor([545], device='cuda:0'), tensor([746], device='cuda:0'), tensor([586], device='cuda:0'), tensor([586], device='cuda:0'), tensor([586], device='cuda:0'), tensor([586], device='cuda:0'), tensor([573], device='cuda:0'), tensor([408], device='cuda:0'), tensor([665], device='cuda:0'), tensor([656], device='cuda:0'), tensor([918], device='cuda:0'), tensor([802], device='cuda:0'), tensor([882], device='cuda:0'), tensor([482], device='cuda:0'), tensor([407], device='cuda:0'), tensor([586], device='cuda:0'), tensor([880], device='cuda:0'), tensor([628], device='cuda:0'), tensor([627], device='cuda:0'), tensor([436], device='cuda:0'), tensor([627], device='cuda:0'), tensor([918], device='cuda:0'), tensor([569], device='cuda:0'), tensor([485], device='cuda:0'), tensor([751], device='cuda:0'), tensor([561], device='cuda:0'), tensor([656], device='cuda:0'), tensor([450], device='cuda:0'), tensor([468], device='cuda:0'), tensor([539], device='cuda:0'), tensor([801], device='cuda:0'), tensor([656], device='cuda:0'), tensor([565], device='cuda:0'), tensor([847], device='cuda:0'), tensor([25], device='cuda:0'), tensor([830], device='cuda:0'), tensor([480], device='cuda:0'), tensor([554], device='cuda:0'), tensor([436], device='cuda:0'), tensor([511], device='cuda:0')]
y_pred_l2: []
y_pred_hop_skip: []
y_pred_noise: [tensor([586], device='cuda:0'), tensor([472], device='cuda:0'), tensor([847], device='cuda:0'), tensor([802], device='cuda:0'), tensor([586], device='cuda:0'), tensor([586], device='cuda:0'), tensor([586], device='cuda:0'), tensor([847], device='cuda:0'), tensor([802], device='cuda:0'), tensor([656], device='cuda:0'), tensor([685], device='cuda:0'), tensor([802], device='cuda:0'), tensor([778], device='cuda:0'), tensor([468], device='cuda:0'), tensor([734], device='cuda:0'), tensor([586], device='cuda:0'), tensor([802], device='cuda:0'), tensor([536], device='cuda:0'), tensor([627], device='cuda:0'), tensor([468], device='cuda:0'), tensor([436], device='cuda:0'), tensor([918], device='cuda:0'), tensor([468], device='cuda:0'), tensor([627], device='cuda:0'), tensor([468], device='cuda:0'), tensor([554], device='cuda:0'), tensor([627], device='cuda:0'), tensor([802], device='cuda:0'), tensor([627], device='cuda:0'), tensor([593], device='cuda:0'), tensor([801], device='cuda:0'), tensor([468], device='cuda:0'), tensor([484], device='cuda:0'), tensor([586], device='cuda:0'), tensor([802], device='cuda:0'), tensor([830], device='cuda:0'), tensor([627], device='cuda:0'), tensor([913], device='cuda:0'), tensor([627], device='cuda:0'), tensor([627], device='cuda:0')]
y_pred_semantic: [tensor([673], device='cuda:0'), tensor([814], device='cuda:0'), tensor([847], device='cuda:0'), tensor([871], device='cuda:0'), tensor([126], device='cuda:0'), tensor([446], device='cuda:0'), tensor([871], device='cuda:0'), tensor([847], device='cuda:0'), tensor([691], device='cuda:0'), tensor([742], device='cuda:0'), tensor([481], device='cuda:0'), tensor([868], device='cuda:0'), tensor([778], device='cuda:0'), tensor([760], device='cuda:0'), tensor([468], device='cuda:0'), tensor([917], device='cuda:0'), tensor([691], device='cuda:0'), tensor([484], device='cuda:0'), tensor([526], device='cuda:0'), tensor([511], device='cuda:0'), tensor([627], device='cuda:0'), tensor([833], device='cuda:0'), tensor([531], device='cuda:0'), tensor([713], device='cuda:0'), tensor([751], device='cuda:0'), tensor([484], device='cuda:0'), tensor([742], device='cuda:0'), tensor([840], device='cuda:0'), tensor([751], device='cuda:0'), tensor([593], device='cuda:0'), tensor([858], device='cuda:0'), tensor([742], device='cuda:0'), tensor([814], device='cuda:0'), tensor([921], device='cuda:0'), tensor([450], device='cuda:0'), tensor([691], device='cuda:0'), tensor([769], device='cuda:0'), tensor([913], device='cuda:0'), tensor([627], device='cuda:0'), tensor([627], device='cuda:0')]
y_pred_l1: [tensor([586], device='cuda:0'), tensor([472], device='cuda:0'), tensor([847], device='cuda:0'), tensor([802], device='cuda:0'), tensor([408], device='cuda:0'), tensor([820], device='cuda:0'), tensor([586], device='cuda:0'), tensor([847], device='cuda:0'), tensor([670], device='cuda:0'), tensor([627], device='cuda:0'), tensor([450], device='cuda:0'), tensor([802], device='cuda:0'), tensor([480], device='cuda:0'), tensor([468], device='cuda:0'), tensor([468], device='cuda:0'), tensor([847], device='cuda:0'), tensor([802], device='cuda:0'), tensor([536], device='cuda:0'), tensor([436], device='cuda:0'), tensor([468], device='cuda:0'), tensor([436], device='cuda:0'), tensor([913], device='cuda:0'), tensor([468], device='cuda:0'), tensor([627], device='cuda:0'), tensor([627], device='cuda:0'), tensor([554], device='cuda:0'), tensor([627], device='cuda:0'), tensor([802], device='cuda:0'), tensor([627], device='cuda:0'), tensor([593], device='cuda:0'), tensor([702], device='cuda:0'), tensor([468], device='cuda:0'), tensor([484], device='cuda:0'), tensor([586], device='cuda:0'), tensor([802], device='cuda:0'), tensor([802], device='cuda:0'), tensor([627], device='cuda:0'), tensor([913], device='cuda:0'), tensor([627], device='cuda:0'), tensor([627], device='cuda:0')]
y_pred_spsa: []
time: [0.11099958419799805, 2.3869998455047607, 0.018000125885009766, 0.017999887466430664, 1.0827391147613525, 0.09599995613098145, 2.3802971839904785, 0.018999576568603516, 0.017998218536376953, 1.0950965881347656, 0.09600019454956055, 2.385775566101074, 0.01900029182434082, 0.018999576568603516, 1.091219186782837, 0.0970005989074707, 2.3908560276031494, 0.018001317977905273, 0.018000125885009766, 1.078028678894043, 0.09599876403808594, 2.3695666790008545, 0.01899886131286621, 0.01900005340576172, 1.100029468536377, 0.09600234031677246, 2.382000207901001, 0.018999576568603516, 0.017999887466430664, 1.0898241996765137, 0.0969998836517334, 2.416020631790161, 0.018999814987182617, 0.01900005340576172, 1.084179401397705, 0.09599995613098145, 2.3967394828796387, 0.01900005340576172, 0.017999649047851562, 1.0814385414123535, 0.09599971771240234, 2.3839993476867676, 0.018000125885009766, 0.01899886131286621, 1.0851964950561523, 0.0970001220703125, 2.3649990558624268, 0.01799917221069336, 0.018000364303588867, 1.0856506824493408, 0.09800076484680176, 2.3979990482330322, 0.01900005340576172, 0.019999980926513672, 1.2274127006530762, 0.10400128364562988, 2.4640419483184814, 0.018999099731445312, 0.017997264862060547, 1.0830092430114746, 0.09799957275390625, 2.3724422454833984, 0.018000125885009766, 0.017999887466430664, 1.112271785736084, 0.09600019454956055, 2.3859989643096924, 0.017999887466430664, 0.01799941062927246, 1.124058485031128, 0.10200047492980957, 2.3999996185302734, 0.01799917221069336, 0.018000364303588867, 1.1016738414764404, 0.10699844360351562, 2.621232032775879, 0.018000125885009766, 0.01800060272216797, 1.2046239376068115, 0.09900307655334473, 2.367999792098999, 0.018999576568603516, 0.019001007080078125, 1.0876023769378662, 0.09599876403808594, 2.364701271057129, 0.017998933792114258, 0.018000364303588867, 1.0825600624084473, 0.09600019454956055, 2.422999620437622, 0.01900005340576172, 0.017998933792114258, 1.0876526832580566, 0.09799981117248535, 2.3677330017089844, 0.01799941062927246, 0.01800084114074707, 1.0859813690185547, 0.09599924087524414, 2.36299729347229, 0.01899886131286621, 0.018000125885009766, 1.0891845226287842, 0.09999680519104004, 2.6110944747924805, 0.017998933792114258, 0.019001007080078125, 1.174225091934204, 0.10399985313415527, 2.485643148422241, 0.018000125885009766, 0.018000125885009766, 1.0824594497680664, 0.10699987411499023, 2.576000928878784, 0.018996477127075195, 0.019004106521606445, 1.0851256847381592, 0.09599971771240234, 2.3650007247924805, 0.018999814987182617, 0.019000768661499023, 1.1255550384521484, 0.10600042343139648, 2.4939992427825928, 0.018000125885009766, 0.01899886131286621, 1.2144122123718262, 0.0989992618560791, 2.4920005798339844, 0.017999887466430664, 0.017999887466430664, 1.1810743808746338, 0.09599947929382324, 2.431000232696533, 0.019001007080078125, 0.018000125885009766, 1.1388542652130127, 0.0970003604888916, 2.380000591278076, 0.01899886131286621, 0.017999887466430664, 1.1764006614685059, 0.10499906539916992, 2.4709994792938232, 0.01900029182434082, 0.017999649047851562, 1.129847526550293, 0.10000038146972656, 2.4059994220733643, 0.018999814987182617, 0.017999887466430664, 1.0988528728485107, 0.10899829864501953, 2.4659993648529053, 0.01900029182434082, 0.01900005340576172, 1.120727777481079, 0.09599971771240234, 2.4780287742614746, 0.01899886131286621, 0.019002437591552734, 1.157440423965454, 0.09800028800964355, 2.3910000324249268, 0.017999887466430664, 0.019003868103027344, 1.2241816520690918, 0.09900403022766113, 2.4475090503692627, 0.017999887466430664, 0.017998456954956055, 1.1537787914276123, 0.10600018501281738, 2.537000894546509, 0.019999265670776367, 0.019001007080078125, 1.1321063041687012, 0.09599995613098145, 2.5190000534057617, 0.018999814987182617, 0.017999887466430664, 1.2440440654754639, 0.10500001907348633, 2.61299991607666, 0.018000125885009766, 0.019000530242919922, 1.125108003616333, 0.09499979019165039, 2.3759992122650146, 0.018000125885009766, 0.01899576187133789, 1.1607637405395508, 0.0970005989074707, 2.381002187728882, 0.017999887466430664, 0.018000125885009766, 1.0991339683532715]
funcs_tested: 0
test acc on clean examples (%): 47.50
test acc on FGM adversarial examples (%): 10.00
test acc on PGD adversarial examples (%): 12.50
test acc on L2 adversarial examples (%): 0.00
test acc on HOP-SKIP-JUMP adversarial examples (%): 0.00
test acc on NOISE adversarial examples (%): 47.50
test acc on SEMANTIC adversarial examples (%): 20.00
test acc on L1 adversarial examples (%): 50.00
test acc on SPSA adversarial examples (%): 0.00

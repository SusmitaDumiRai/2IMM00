nb_test: 40
correct: 12
correct_fgm: 0
correct_pgd: 0
correct_l2: 0
correct_hop_skip: 0
correct_noise: 4
correct_semantic: 2
correct_l1: 10
correct_spsa: 7
y_pred: [tensor([814], device='cuda:0'), tensor([465], device='cuda:0'), tensor([436], device='cuda:0'), tensor([468], device='cuda:0'), tensor([871], device='cuda:0'), tensor([656], device='cuda:0'), tensor([803], device='cuda:0'), tensor([970], device='cuda:0'), tensor([450], device='cuda:0'), tensor([468], device='cuda:0'), tensor([821], device='cuda:0'), tensor([847], device='cuda:0'), tensor([403], device='cuda:0'), tensor([565], device='cuda:0'), tensor([802], device='cuda:0'), tensor([757], device='cuda:0'), tensor([807], device='cuda:0'), tensor([224], device='cuda:0'), tensor([627], device='cuda:0'), tensor([763], device='cuda:0'), tensor([450], device='cuda:0'), tensor([183], device='cuda:0'), tensor([407], device='cuda:0'), tensor([627], device='cuda:0'), tensor([468], device='cuda:0'), tensor([847], device='cuda:0'), tensor([814], device='cuda:0'), tensor([734], device='cuda:0'), tensor([436], device='cuda:0'), tensor([555], device='cuda:0'), tensor([468], device='cuda:0'), tensor([802], device='cuda:0'), tensor([871], device='cuda:0'), tensor([360], device='cuda:0'), tensor([609], device='cuda:0'), tensor([821], device='cuda:0'), tensor([779], device='cuda:0'), tensor([468], device='cuda:0'), tensor([414], device='cuda:0'), tensor([812], device='cuda:0')]
y_pred_fgm: [tensor([109], device='cuda:0'), tensor([815], device='cuda:0'), tensor([611], device='cuda:0'), tensor([643], device='cuda:0'), tensor([611], device='cuda:0'), tensor([646], device='cuda:0'), tensor([84], device='cuda:0'), tensor([549], device='cuda:0'), tensor([611], device='cuda:0'), tensor([476], device='cuda:0'), tensor([783], device='cuda:0'), tensor([611], device='cuda:0'), tensor([741], device='cuda:0'), tensor([791], device='cuda:0'), tensor([815], device='cuda:0'), tensor([498], device='cuda:0'), tensor([611], device='cuda:0'), tensor([741], device='cuda:0'), tensor([84], device='cuda:0'), tensor([538], device='cuda:0'), tensor([721], device='cuda:0'), tensor([489], device='cuda:0'), tensor([611], device='cuda:0'), tensor([748], device='cuda:0'), tensor([489], device='cuda:0'), tensor([646], device='cuda:0'), tensor([611], device='cuda:0'), tensor([84], device='cuda:0'), tensor([621], device='cuda:0'), tensor([509], device='cuda:0'), tensor([987], device='cuda:0'), tensor([806], device='cuda:0'), tensor([109], device='cuda:0'), tensor([904], device='cuda:0'), tensor([581], device='cuda:0'), tensor([84], device='cuda:0'), tensor([611], device='cuda:0'), tensor([824], device='cuda:0'), tensor([800], device='cuda:0'), tensor([84], device='cuda:0')]
y_pred_pgd: [tensor([772], device='cuda:0'), tensor([289], device='cuda:0'), tensor([727], device='cuda:0'), tensor([558], device='cuda:0'), tensor([724], device='cuda:0'), tensor([471], device='cuda:0'), tensor([85], device='cuda:0'), tensor([608], device='cuda:0'), tensor([383], device='cuda:0'), tensor([854], device='cuda:0'), tensor([67], device='cuda:0'), tensor([663], device='cuda:0'), tensor([609], device='cuda:0'), tensor([148], device='cuda:0'), tensor([685], device='cuda:0'), tensor([835], device='cuda:0'), tensor([357], device='cuda:0'), tensor([496], device='cuda:0'), tensor([636], device='cuda:0'), tensor([866], device='cuda:0'), tensor([815], device='cuda:0'), tensor([300], device='cuda:0'), tensor([709], device='cuda:0'), tensor([597], device='cuda:0'), tensor([434], device='cuda:0'), tensor([398], device='cuda:0'), tensor([563], device='cuda:0'), tensor([632], device='cuda:0'), tensor([656], device='cuda:0'), tensor([510], device='cuda:0'), tensor([779], device='cuda:0'), tensor([806], device='cuda:0'), tensor([14], device='cuda:0'), tensor([650], device='cuda:0'), tensor([581], device='cuda:0'), tensor([67], device='cuda:0'), tensor([234], device='cuda:0'), tensor([511], device='cuda:0'), tensor([637], device='cuda:0'), tensor([333], device='cuda:0')]
y_pred_l2: []
y_pred_hop_skip: []
y_pred_noise: [tensor([828], device='cuda:0'), tensor([289], device='cuda:0'), tensor([757], device='cuda:0'), tensor([468], device='cuda:0'), tensor([780], device='cuda:0'), tensor([656], device='cuda:0'), tensor([803], device='cuda:0'), tensor([847], device='cuda:0'), tensor([56], device='cuda:0'), tensor([498], device='cuda:0'), tensor([825], device='cuda:0'), tensor([663], device='cuda:0'), tensor([403], device='cuda:0'), tensor([565], device='cuda:0'), tensor([530], device='cuda:0'), tensor([565], device='cuda:0'), tensor([858], device='cuda:0'), tensor([496], device='cuda:0'), tensor([627], device='cuda:0'), tensor([464], device='cuda:0'), tensor([772], device='cuda:0'), tensor([843], device='cuda:0'), tensor([704], device='cuda:0'), tensor([685], device='cuda:0'), tensor([703], device='cuda:0'), tensor([847], device='cuda:0'), tensor([767], device='cuda:0'), tensor([609], device='cuda:0'), tensor([436], device='cuda:0'), tensor([555], device='cuda:0'), tensor([803], device='cuda:0'), tensor([539], device='cuda:0'), tensor([2], device='cuda:0'), tensor([650], device='cuda:0'), tensor([609], device='cuda:0'), tensor([781], device='cuda:0'), tensor([530], device='cuda:0'), tensor([468], device='cuda:0'), tensor([414], device='cuda:0'), tensor([769], device='cuda:0')]
y_pred_semantic: [tensor([593], device='cuda:0'), tensor([750], device='cuda:0'), tensor([876], device='cuda:0'), tensor([916], device='cuda:0'), tensor([456], device='cuda:0'), tensor([627], device='cuda:0'), tensor([623], device='cuda:0'), tensor([354], device='cuda:0'), tensor([691], device='cuda:0'), tensor([800], device='cuda:0'), tensor([41], device='cuda:0'), tensor([750], device='cuda:0'), tensor([847], device='cuda:0'), tensor([895], device='cuda:0'), tensor([300], device='cuda:0'), tensor([593], device='cuda:0'), tensor([807], device='cuda:0'), tensor([840], device='cuda:0'), tensor([534], device='cuda:0'), tensor([835], device='cuda:0'), tensor([38], device='cuda:0'), tensor([330], device='cuda:0'), tensor([688], device='cuda:0'), tensor([485], device='cuda:0'), tensor([659], device='cuda:0'), tensor([559], device='cuda:0'), tensor([709], device='cuda:0'), tensor([897], device='cuda:0'), tensor([436], device='cuda:0'), tensor([648], device='cuda:0'), tensor([778], device='cuda:0'), tensor([433], device='cuda:0'), tensor([726], device='cuda:0'), tensor([488], device='cuda:0'), tensor([436], device='cuda:0'), tensor([741], device='cuda:0'), tensor([680], device='cuda:0'), tensor([589], device='cuda:0'), tensor([531], device='cuda:0'), tensor([565], device='cuda:0')]
y_pred_l1: [tensor([814], device='cuda:0'), tensor([384], device='cuda:0'), tensor([757], device='cuda:0'), tensor([468], device='cuda:0'), tensor([871], device='cuda:0'), tensor([656], device='cuda:0'), tensor([803], device='cuda:0'), tensor([408], device='cuda:0'), tensor([450], device='cuda:0'), tensor([498], device='cuda:0'), tensor([821], device='cuda:0'), tensor([847], device='cuda:0'), tensor([403], device='cuda:0'), tensor([565], device='cuda:0'), tensor([802], device='cuda:0'), tensor([757], device='cuda:0'), tensor([807], device='cuda:0'), tensor([224], device='cuda:0'), tensor([627], device='cuda:0'), tensor([763], device='cuda:0'), tensor([450], device='cuda:0'), tensor([730], device='cuda:0'), tensor([407], device='cuda:0'), tensor([627], device='cuda:0'), tensor([468], device='cuda:0'), tensor([847], device='cuda:0'), tensor([693], device='cuda:0'), tensor([864], device='cuda:0'), tensor([436], device='cuda:0'), tensor([555], device='cuda:0'), tensor([468], device='cuda:0'), tensor([802], device='cuda:0'), tensor([871], device='cuda:0'), tensor([360], device='cuda:0'), tensor([609], device='cuda:0'), tensor([781], device='cuda:0'), tensor([705], device='cuda:0'), tensor([468], device='cuda:0'), tensor([414], device='cuda:0'), tensor([812], device='cuda:0')]
y_pred_spsa: [tensor([828], device='cuda:0'), tensor([289], device='cuda:0'), tensor([757], device='cuda:0'), tensor([468], device='cuda:0'), tensor([780], device='cuda:0'), tensor([656], device='cuda:0'), tensor([537], device='cuda:0'), tensor([847], device='cuda:0'), tensor([850], device='cuda:0'), tensor([498], device='cuda:0'), tensor([825], device='cuda:0'), tensor([847], device='cuda:0'), tensor([403], device='cuda:0'), tensor([565], device='cuda:0'), tensor([989], device='cuda:0'), tensor([565], device='cuda:0'), tensor([858], device='cuda:0'), tensor([796], device='cuda:0'), tensor([627], device='cuda:0'), tensor([847], device='cuda:0'), tensor([772], device='cuda:0'), tensor([919], device='cuda:0'), tensor([481], device='cuda:0'), tensor([685], device='cuda:0'), tensor([627], device='cuda:0'), tensor([847], device='cuda:0'), tensor([767], device='cuda:0'), tensor([609], device='cuda:0'), tensor([436], device='cuda:0'), tensor([555], device='cuda:0'), tensor([803], device='cuda:0'), tensor([539], device='cuda:0'), tensor([2], device='cuda:0'), tensor([650], device='cuda:0'), tensor([609], device='cuda:0'), tensor([912], device='cuda:0'), tensor([530], device='cuda:0'), tensor([468], device='cuda:0'), tensor([414], device='cuda:0'), tensor([769], device='cuda:0')]
time: [0.014997243881225586, 0.49399614334106445, 0.0010004043579101562, 0.0009992122650146484, 0.0370025634765625, 0.28999924659729004, 0.015003442764282227, 0.4810028076171875, 0.0010008811950683594, 0.0, 0.0370023250579834, 0.28700685501098633, 0.014000654220581055, 0.48400187492370605, 0.0010008811950683594, 0.0, 0.0370028018951416, 0.2859992980957031, 0.013998985290527344, 0.48377442359924316, 0.0009996891021728516, 0.0, 0.03798818588256836, 0.2879922389984131, 0.013996362686157227, 0.47899818420410156, 0.0, 0.0010001659393310547, 0.03701472282409668, 0.29199886322021484, 0.014997720718383789, 0.4870030879974365, 0.0009999275207519531, 0.0010001659393310547, 0.037012338638305664, 0.291978120803833, 0.015022993087768555, 0.48297619819641113, 0.0, 0.0010008811950683594, 0.036992549896240234, 0.2870011329650879, 0.015035152435302734, 0.4829690456390381, 0.0009996891021728516, 0.0, 0.03599977493286133, 0.2899816036224365, 0.014030694961547852, 0.48198843002319336, 0.0009999275207519531, 0.0010004043579101562, 0.03701162338256836, 0.286998987197876, 0.014996051788330078, 0.4810018539428711, 0.0010035037994384766, 0.0009980201721191406, 0.0370028018951416, 0.28899669647216797, 0.014999151229858398, 0.48498010635375977, 0.0010006427764892578, 0.0010001659393310547, 0.03600192070007324, 0.287003755569458, 0.015033245086669922, 0.48296499252319336, 0.0, 0.0010001659393310547, 0.03699445724487305, 0.29505443572998047, 0.015997886657714844, 0.48400068283081055, 0.0010008811950683594, 0.0010004043579101562, 0.037000417709350586, 0.29200077056884766, 0.01500391960144043, 0.48199915885925293, 0.0, 0.0009984970092773438, 0.037000179290771484, 0.2899961471557617, 0.014999866485595703, 0.4809999465942383, 0.0010008811950683594, 0.0, 0.03699970245361328, 0.28800010681152344, 0.0149993896484375, 0.48500490188598633, 0.0, 0.0009999275207519531, 0.03700065612792969, 0.28800082206726074, 0.014998674392700195, 0.48200035095214844, 0.0010004043579101562, 0.0010004043579101562, 0.037001609802246094, 0.28999996185302734, 0.015004396438598633, 0.4809997081756592, 0.0010020732879638672, 0.0010004043579101562, 0.03600025177001953, 0.2890005111694336, 0.014997720718383789, 0.48000025749206543, 0.0009992122650146484, 0.0009996891021728516, 0.037515878677368164, 0.2889997959136963, 0.014999866485595703, 0.4830005168914795, 0.0010008811950683594, 0.0, 0.0370025634765625, 0.28600001335144043, 0.014999628067016602, 0.4830033779144287, 0.0010020732879638672, 0.001001119613647461, 0.037003278732299805, 0.2889981269836426, 0.013999462127685547, 0.4799997806549072, 0.0, 0.0010001659393310547, 0.03700065612792969, 0.2910003662109375, 0.01499795913696289, 0.47800159454345703, 0.0010004043579101562, 0.0, 0.037000417709350586, 0.2910001277923584, 0.01500082015991211, 0.4810009002685547, 0.0009975433349609375, 0.0009999275207519531, 0.03699827194213867, 0.2869997024536133, 0.014997482299804688, 0.4850010871887207, 0.0009996891021728516, 0.0, 0.037000417709350586, 0.2870042324066162, 0.013998031616210938, 0.4900166988372803, 0.0009992122650146484, 0.0009999275207519531, 0.03600287437438965, 0.29001379013061523, 0.015999794006347656, 0.47994494438171387, 0.0010004043579101562, 0.0010013580322265625, 0.03600025177001953, 0.288008451461792, 0.014997482299804688, 0.4805142879486084, 0.0, 0.0, 0.03700447082519531, 0.29000091552734375, 0.015002965927124023, 0.4810001850128174, 0.0, 0.0010001659393310547, 0.03600168228149414, 0.2889997959136963, 0.015002012252807617, 0.4830000400543213, 0.0010004043579101562, 0.0, 0.0370025634765625, 0.2870006561279297, 0.01399993896484375, 0.48400163650512695, 0.0, 0.0010001659393310547, 0.036000967025756836, 0.28800415992736816, 0.018518447875976562, 0.48099708557128906, 0.0, 0.0010001659393310547, 0.03600263595581055, 0.28972387313842773, 0.014999151229858398, 0.48200058937072754, 0.0010004043579101562, 0.0, 0.037000417709350586, 0.2900114059448242, 0.0149993896484375, 0.481997013092041, 0.0010006427764892578, 0.0, 0.03600049018859863, 0.28700995445251465, 0.014999866485595703, 0.48200035095214844, 0.0, 0.0009999275207519531, 0.03700089454650879, 0.2890002727508545, 0.0149993896484375, 0.48600172996520996, 0.0010006427764892578, 0.0010008811950683594, 0.03700065612792969, 0.3039994239807129, 0.014997243881225586, 0.5050041675567627, 0.0010044574737548828, 0.0, 0.0370025634765625, 0.28300023078918457, 0.013997316360473633, 0.4759984016418457, 0.0010004043579101562, 0.0, 0.037000417709350586, 0.2910001277923584, 0.014999866485595703, 0.4750030040740967, 0.0010042190551757812, 0.0010035037994384766, 0.036997318267822266, 0.2820088863372803, 0.014998674392700195, 0.47400689125061035, 0.0010001659393310547, 0.0, 0.039002418518066406, 0.28299999237060547]
funcs_tested: 0
test acc on clean examples (%): 30.00
test acc on FGM adversarial examples (%): 0.00
test acc on PGD adversarial examples (%): 0.00
test acc on L2 adversarial examples (%): 0.00
test acc on HOP-SKIP-JUMP adversarial examples (%): 0.00
test acc on NOISE adversarial examples (%): 10.00
test acc on SEMANTIC adversarial examples (%): 5.00
test acc on L1 adversarial examples (%): 25.00
test acc on SPSA adversarial examples (%): 17.50

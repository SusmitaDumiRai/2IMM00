nb_test: 40
correct: 19
correct_fgm: 9
correct_pgd: 5
correct_l2: 0
correct_hop_skip: 0
correct_noise: 20
correct_semantic: 14
correct_l1: 19
correct_spsa: 0
y_pred: [tensor([285], device='cuda:0'), tensor([282], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([188], device='cuda:0'), tensor([226], device='cuda:0'), tensor([283], device='cuda:0'), tensor([284], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([282], device='cuda:0'), tensor([284], device='cuda:0'), tensor([284], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([287], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0')]
y_pred_fgm: [tensor([283], device='cuda:0'), tensor([154], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([356], device='cuda:0'), tensor([285], device='cuda:0'), tensor([333], device='cuda:0'), tensor([478], device='cuda:0'), tensor([283], device='cuda:0'), tensor([154], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([282], device='cuda:0'), tensor([282], device='cuda:0'), tensor([283], device='cuda:0'), tensor([478], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([282], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([284], device='cuda:0'), tensor([287], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([365], device='cuda:0'), tensor([282], device='cuda:0'), tensor([283], device='cuda:0'), tensor([337], device='cuda:0'), tensor([282], device='cuda:0')]
y_pred_pgd: [tensor([282], device='cuda:0'), tensor([157], device='cuda:0'), tensor([281], device='cuda:0'), tensor([154], device='cuda:0'), tensor([287], device='cuda:0'), tensor([282], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([492], device='cuda:0'), tensor([285], device='cuda:0'), tensor([333], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([154], device='cuda:0'), tensor([287], device='cuda:0'), tensor([282], device='cuda:0'), tensor([284], device='cuda:0'), tensor([282], device='cuda:0'), tensor([282], device='cuda:0'), tensor([24], device='cuda:0'), tensor([382], device='cuda:0'), tensor([282], device='cuda:0'), tensor([282], device='cuda:0'), tensor([373], device='cuda:0'), tensor([287], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([249], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([287], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([332], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([282], device='cuda:0')]
y_pred_l2: []
y_pred_hop_skip: []
y_pred_noise: [tensor([285], device='cuda:0'), tensor([282], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0'), tensor([282], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([333], device='cuda:0'), tensor([194], device='cuda:0'), tensor([283], device='cuda:0'), tensor([284], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([282], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([284], device='cuda:0'), tensor([287], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([287], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0')]
y_pred_semantic: [tensor([285], device='cuda:0'), tensor([170], device='cuda:0'), tensor([281], device='cuda:0'), tensor([377], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([370], device='cuda:0'), tensor([261], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([194], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([282], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([332], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([282], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0')]
y_pred_l1: [tensor([282], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0'), tensor([282], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([161], device='cuda:0'), tensor([155], device='cuda:0'), tensor([283], device='cuda:0'), tensor([284], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([282], device='cuda:0'), tensor([282], device='cuda:0'), tensor([283], device='cuda:0'), tensor([287], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([284], device='cuda:0'), tensor([287], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([287], device='cuda:0'), tensor([281], device='cuda:0'), tensor([282], device='cuda:0')]
y_pred_spsa: []
time: [0.09099745750427246, 2.0850024223327637, 0.011003971099853516, 0.010003328323364258, 0.8810229301452637, 0.09399986267089844, 2.079000473022461, 0.009999752044677734, 0.009999990463256836, 0.8886494636535645, 0.09300041198730469, 2.0880000591278076, 0.009999513626098633, 0.009999990463256836, 1.0366511344909668, 0.09300088882446289, 2.2799997329711914, 0.010000228881835938, 0.009998798370361328, 0.8806259632110596, 0.09300017356872559, 2.223043441772461, 0.010000467300415039, 0.010002851486206055, 0.8918755054473877, 0.10200309753417969, 2.0770325660705566, 0.010999917984008789, 0.010000228881835938, 0.884213924407959, 0.11800050735473633, 2.322000741958618, 0.011000633239746094, 0.010002374649047852, 0.971853494644165, 0.09300017356872559, 2.0739400386810303, 0.009999513626098633, 0.009000301361083984, 0.8882997035980225, 0.09300041198730469, 2.085212230682373, 0.010000228881835938, 0.010001420974731445, 0.8811323642730713, 0.09299993515014648, 2.073129177093506, 0.009999275207519531, 0.010001182556152344, 0.8815555572509766, 0.09300017356872559, 2.2090139389038086, 0.009999752044677734, 0.009999752044677734, 0.9036862850189209, 0.11400055885314941, 2.185835361480713, 0.012001991271972656, 0.010999441146850586, 0.9062674045562744, 0.1100001335144043, 2.279999256134033, 0.011000394821166992, 0.011000633239746094, 0.9187750816345215, 0.13652491569519043, 2.444791078567505, 0.011001110076904297, 0.011000394821166992, 1.0253469944000244, 0.10700035095214844, 2.2799999713897705, 0.010999441146850586, 0.01099848747253418, 0.9296767711639404, 0.11400127410888672, 2.3050005435943604, 0.010000228881835938, 0.009999752044677734, 0.9126105308532715, 0.09299993515014648, 2.1789989471435547, 0.010000228881835938, 0.010999917984008789, 0.8974785804748535, 0.10600042343139648, 2.2508773803710938, 0.01100015640258789, 0.009999990463256836, 0.883897066116333, 0.09300041198730469, 2.2123920917510986, 0.009999275207519531, 0.009996414184570312, 0.9908373355865479, 0.09299993515014648, 2.3574817180633545, 0.009999752044677734, 0.010000228881835938, 0.9011602401733398, 0.0930018424987793, 2.2170000076293945, 0.010000467300415039, 0.010002374649047852, 0.8806817531585693, 0.09299921989440918, 2.0807864665985107, 0.01000070571899414, 0.01000070571899414, 0.9928858280181885, 0.09299945831298828, 2.079000234603882, 0.010003089904785156, 0.010000944137573242, 0.8884384632110596, 0.09399914741516113, 2.076605796813965, 0.011000633239746094, 0.010000944137573242, 0.8875010013580322, 0.09400129318237305, 2.202474594116211, 0.010999679565429688, 0.011000394821166992, 0.8975098133087158, 0.0930032730102539, 2.2317452430725098, 0.009999990463256836, 0.010000228881835938, 0.8913142681121826, 0.09300041198730469, 2.2245962619781494, 0.00999903678894043, 0.009999275207519531, 0.8984057903289795, 0.10500073432922363, 2.082019090652466, 0.009999513626098633, 0.009999275207519531, 0.8918054103851318, 0.09300041198730469, 2.1024551391601562, 0.01100015640258789, 0.009999990463256836, 1.011113166809082, 0.09400010108947754, 2.0789997577667236, 0.00999903678894043, 0.010002851486206055, 0.8982405662536621, 0.09299993515014648, 2.2300007343292236, 0.009999990463256836, 0.00999903678894043, 1.0783398151397705, 0.09299993515014648, 2.0788354873657227, 0.009999752044677734, 0.009000062942504883, 0.8826498985290527, 0.09300041198730469, 2.0784425735473633, 0.010000467300415039, 0.009999752044677734, 0.888286828994751, 0.09299993515014648, 2.0790371894836426, 0.010001659393310547, 0.009999513626098633, 0.8858628273010254, 0.1139993667602539, 2.2163949012756348, 0.010242223739624023, 0.009997844696044922, 0.8855116367340088, 0.09399986267089844, 2.199000358581543, 0.011000394821166992, 0.010999679565429688, 1.0131287574768066, 0.0950007438659668, 2.0829997062683105, 0.009999990463256836, 0.010000228881835938, 1.0224716663360596, 0.09399914741516113, 2.079000234603882, 0.011002302169799805, 0.010000228881835938, 0.8840711116790771, 0.09400224685668945, 2.0769994258880615, 0.010003089904785156, 0.010000228881835938, 0.8826291561126709, 0.09299969673156738, 2.077000141143799, 0.010999679565429688, 0.01100015640258789, 1.0275793075561523]
funcs_tested: 0
test acc on clean examples (%): 47.50
test acc on FGM adversarial examples (%): 22.50
test acc on PGD adversarial examples (%): 12.50
test acc on L2 adversarial examples (%): 0.00
test acc on HOP-SKIP-JUMP adversarial examples (%): 0.00
test acc on NOISE adversarial examples (%): 50.00
test acc on SEMANTIC adversarial examples (%): 35.00
test acc on L1 adversarial examples (%): 47.50
test acc on SPSA adversarial examples (%): 0.00

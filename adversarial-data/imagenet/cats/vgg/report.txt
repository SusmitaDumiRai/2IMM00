nb_test: 40
correct: 18
correct_fgm: 1
correct_pgd: 1
correct_l2: 0
correct_hop_skip: 0
correct_noise: 13
correct_semantic: 10
correct_l1: 15
correct_spsa: 0
y_pred: [tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([330], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([284], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([284], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([250], device='cuda:0'), tensor([188], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0')]
y_pred_fgm: [tensor([539], device='cuda:0'), tensor([279], device='cuda:0'), tensor([658], device='cuda:0'), tensor([281], device='cuda:0'), tensor([850], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([260], device='cuda:0'), tensor([281], device='cuda:0'), tensor([824], device='cuda:0'), tensor([332], device='cuda:0'), tensor([735], device='cuda:0'), tensor([474], device='cuda:0'), tensor([539], device='cuda:0'), tensor([260], device='cuda:0'), tensor([283], device='cuda:0'), tensor([334], device='cuda:0'), tensor([474], device='cuda:0'), tensor([283], device='cuda:0'), tensor([270], device='cuda:0'), tensor([106], device='cuda:0'), tensor([363], device='cuda:0'), tensor([474], device='cuda:0'), tensor([282], device='cuda:0'), tensor([434], device='cuda:0'), tensor([283], device='cuda:0'), tensor([287], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([76], device='cuda:0'), tensor([181], device='cuda:0'), tensor([260], device='cuda:0'), tensor([168], device='cuda:0'), tensor([850], device='cuda:0'), tensor([735], device='cuda:0'), tensor([338], device='cuda:0'), tensor([286], device='cuda:0'), tensor([474], device='cuda:0'), tensor([332], device='cuda:0'), tensor([281], device='cuda:0')]
y_pred_pgd: [tensor([889], device='cuda:0'), tensor([246], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([287], device='cuda:0'), tensor([285], device='cuda:0'), tensor([260], device='cuda:0'), tensor([383], device='cuda:0'), tensor([104], device='cuda:0'), tensor([190], device='cuda:0'), tensor([163], device='cuda:0'), tensor([285], device='cuda:0'), tensor([481], device='cuda:0'), tensor([333], device='cuda:0'), tensor([203], device='cuda:0'), tensor([197], device='cuda:0'), tensor([794], device='cuda:0'), tensor([169], device='cuda:0'), tensor([287], device='cuda:0'), tensor([159], device='cuda:0'), tensor([568], device='cuda:0'), tensor([29], device='cuda:0'), tensor([508], device='cuda:0'), tensor([333], device='cuda:0'), tensor([245], device='cuda:0'), tensor([333], device='cuda:0'), tensor([999], device='cuda:0'), tensor([283], device='cuda:0'), tensor([252], device='cuda:0'), tensor([377], device='cuda:0'), tensor([219], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([332], device='cuda:0'), tensor([331], device='cuda:0'), tensor([286], device='cuda:0'), tensor([999], device='cuda:0'), tensor([332], device='cuda:0'), tensor([292], device='cuda:0')]
y_pred_l2: []
y_pred_hop_skip: []
y_pred_noise: [tensor([383], device='cuda:0'), tensor([153], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([203], device='cuda:0'), tensor([260], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([284], device='cuda:0'), tensor([252], device='cuda:0'), tensor([794], device='cuda:0'), tensor([283], device='cuda:0'), tensor([287], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([190], device='cuda:0'), tensor([285], device='cuda:0'), tensor([333], device='cuda:0'), tensor([284], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([287], device='cuda:0'), tensor([434], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0')]
y_pred_semantic: [tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([181], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([196], device='cuda:0'), tensor([223], device='cuda:0'), tensor([434], device='cuda:0'), tensor([285], device='cuda:0'), tensor([831], device='cuda:0'), tensor([284], device='cuda:0'), tensor([284], device='cuda:0'), tensor([332], device='cuda:0'), tensor([728], device='cuda:0'), tensor([283], device='cuda:0'), tensor([286], device='cuda:0'), tensor([283], device='cuda:0'), tensor([383], device='cuda:0'), tensor([103], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([715], device='cuda:0'), tensor([286], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([728], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([287], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([280], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([223], device='cuda:0'), tensor([285], device='cuda:0')]
y_pred_l1: [tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([330], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([262], device='cuda:0'), tensor([284], device='cuda:0'), tensor([260], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([284], device='cuda:0'), tensor([283], device='cuda:0'), tensor([728], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([250], device='cuda:0'), tensor([331], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([284], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0')]
y_pred_spsa: []
time: [0.36500024795532227, 1.3810021877288818, 0.0009996891021728516, 0.0009996891021728516, 0.04900097846984863, 0.041994571685791016, 1.3449962139129639, 0.0009996891021728516, 0.0010013580322265625, 0.04900193214416504, 0.04199957847595215, 1.3450114727020264, 0.0019998550415039062, 0.0009975433349609375, 0.05000019073486328, 0.04300212860107422, 1.3440041542053223, 0.0010006427764892578, 0.0009996891021728516, 0.05000162124633789, 0.04199981689453125, 1.342998743057251, 0.0009992122650146484, 0.0010001659393310547, 0.0500025749206543, 0.04300284385681152, 1.3441665172576904, 0.0010006427764892578, 0.0010004043579101562, 0.05000138282775879, 0.042002201080322266, 1.3460018634796143, 0.0010018348693847656, 0.0010020732879638672, 0.05000114440917969, 0.042001962661743164, 1.3450021743774414, 0.0010018348693847656, 0.0010018348693847656, 0.049019575119018555, 0.04200172424316406, 1.3450016975402832, 0.001001596450805664, 0.0010006427764892578, 0.050002098083496094, 0.04200172424316406, 1.3430020809173584, 0.0010023117065429688, 0.0010020732879638672, 0.05102252960205078, 0.04200100898742676, 1.345000982284546, 0.0019991397857666016, 0.0010020732879638672, 0.05002117156982422, 0.04200005531311035, 1.3420403003692627, 0.0010023117065429688, 0.00099945068359375, 0.048998117446899414, 0.05000019073486328, 1.3549973964691162, 0.0009992122650146484, 0.0010006427764892578, 0.0500032901763916, 0.042001962661743164, 1.3460423946380615, 0.0010042190551757812, 0.0010020732879638672, 0.04999971389770508, 0.042003631591796875, 1.347050666809082, 0.002004861831665039, 0.0010037422180175781, 0.04999947547912598, 0.04200124740600586, 1.348041296005249, 0.001004934310913086, 0.0010037422180175781, 0.05254006385803223, 0.043004751205444336, 1.3490490913391113, 0.0010037422180175781, 0.001001596450805664, 0.050003767013549805, 0.043004751205444336, 1.348081350326538, 0.0010020732879638672, 0.001003265380859375, 0.04900217056274414, 0.04200148582458496, 1.343052625656128, 0.002003908157348633, 0.0010039806365966797, 0.04999899864196777, 0.04200458526611328, 1.3490045070648193, 0.0010042190551757812, 0.0010044574737548828, 0.05000138282775879, 0.048003435134887695, 1.5370445251464844, 0.0010042190551757812, 0.0010013580322265625, 0.051001548767089844, 0.0500025749206543, 1.4100430011749268, 0.0010046958923339844, 0.0010025501251220703, 0.049002647399902344, 0.04400467872619629, 1.3910462856292725, 0.0010037422180175781, 0.0010039806365966797, 0.049001216888427734, 0.04200458526611328, 1.3700439929962158, 0.001001119613647461, 0.0009944438934326172, 0.05101299285888672, 0.04200339317321777, 1.3713796138763428, 0.002005338668823242, 0.001001596450805664, 0.05037975311279297, 0.045999765396118164, 1.4595117568969727, 0.0010027885437011719, 0.001001119613647461, 0.07100152969360352, 0.05154252052307129, 1.4241089820861816, 0.001001596450805664, 0.0010008811950683594, 0.05100107192993164, 0.05402827262878418, 1.4332542419433594, 0.0010030269622802734, 0.0010037422180175781, 0.05051875114440918, 0.04500126838684082, 1.5590219497680664, 0.0010056495666503906, 0.0009984970092773438, 0.06700325012207031, 0.06403017044067383, 1.8346381187438965, 0.0010037422180175781, 0.0010039806365966797, 0.05153656005859375, 0.05754351615905762, 1.800731897354126, 0.0010035037994384766, 0.001003265380859375, 0.05051612854003906, 0.0480039119720459, 1.5365731716156006, 0.0010039806365966797, 0.001003265380859375, 0.0500025749206543, 0.04300260543823242, 1.3911590576171875, 0.0010042190551757812, 0.0010042190551757812, 0.04900336265563965, 0.04200458526611328, 1.3585164546966553, 0.0010020732879638672, 0.0010037422180175781, 0.051003456115722656, 0.04300355911254883, 1.3500051498413086, 0.0010030269622802734, 0.001001596450805664, 0.0500028133392334, 0.04300379753112793, 1.3490450382232666, 0.0010042190551757812, 0.0010018348693847656, 0.04999947547912598, 0.04200387001037598, 1.3460021018981934, 0.0010042190551757812, 0.0010037422180175781, 0.05000162124633789, 0.04300236701965332, 1.346003532409668, 0.001001596450805664, 0.0010018348693847656, 0.05000424385070801, 0.042003631591796875, 1.3450038433074951, 0.0010018348693847656, 0.001001119613647461, 0.04942131042480469, 0.042001962661743164, 1.346012830734253, 0.0010018348693847656, 0.0010037422180175781, 0.05100226402282715]
funcs_tested: 0
test acc on clean examples (%): 45.00
test acc on FGM adversarial examples (%): 2.50
test acc on PGD adversarial examples (%): 2.50
test acc on L2 adversarial examples (%): 0.00
test acc on HOP-SKIP-JUMP adversarial examples (%): 0.00
test acc on NOISE adversarial examples (%): 32.50
test acc on SEMANTIC adversarial examples (%): 25.00
test acc on L1 adversarial examples (%): 37.50
test acc on SPSA adversarial examples (%): 0.00

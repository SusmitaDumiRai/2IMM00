nb_test: 40
correct: 14
correct_fgm: 0
correct_pgd: 2
correct_l2: 0
correct_hop_skip: 0
correct_noise: 17
correct_semantic: 6
correct_l1: 14
correct_spsa: 14
y_pred: [tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([282], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([287], device='cuda:0'), tensor([282], device='cuda:0'), tensor([284], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([330], device='cuda:0'), tensor([279], device='cuda:0'), tensor([285], device='cuda:0'), tensor([261], device='cuda:0'), tensor([285], device='cuda:0'), tensor([332], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([157], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([259], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([357], device='cuda:0'), tensor([478], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([568], device='cuda:0'), tensor([285], device='cuda:0')]
y_pred_fgm: [tensor([39], device='cuda:0'), tensor([611], device='cuda:0'), tensor([806], device='cuda:0'), tensor([815], device='cuda:0'), tensor([446], device='cuda:0'), tensor([474], device='cuda:0'), tensor([748], device='cuda:0'), tensor([39], device='cuda:0'), tensor([806], device='cuda:0'), tensor([806], device='cuda:0'), tensor([328], device='cuda:0'), tensor([443], device='cuda:0'), tensor([361], device='cuda:0'), tensor([735], device='cuda:0'), tensor([84], device='cuda:0'), tensor([611], device='cuda:0'), tensor([735], device='cuda:0'), tensor([281], device='cuda:0'), tensor([109], device='cuda:0'), tensor([84], device='cuda:0'), tensor([611], device='cuda:0'), tensor([611], device='cuda:0'), tensor([815], device='cuda:0'), tensor([611], device='cuda:0'), tensor([735], device='cuda:0'), tensor([109], device='cuda:0'), tensor([806], device='cuda:0'), tensor([109], device='cuda:0'), tensor([39], device='cuda:0'), tensor([580], device='cuda:0'), tensor([443], device='cuda:0'), tensor([879], device='cuda:0'), tensor([411], device='cuda:0'), tensor([887], device='cuda:0'), tensor([292], device='cuda:0'), tensor([489], device='cuda:0'), tensor([489], device='cuda:0'), tensor([806], device='cuda:0'), tensor([443], device='cuda:0'), tensor([806], device='cuda:0')]
y_pred_pgd: [tensor([286], device='cuda:0'), tensor([333], device='cuda:0'), tensor([289], device='cuda:0'), tensor([370], device='cuda:0'), tensor([287], device='cuda:0'), tensor([289], device='cuda:0'), tensor([285], device='cuda:0'), tensor([390], device='cuda:0'), tensor([457], device='cuda:0'), tensor([48], device='cuda:0'), tensor([281], device='cuda:0'), tensor([333], device='cuda:0'), tensor([388], device='cuda:0'), tensor([285], device='cuda:0'), tensor([76], device='cuda:0'), tensor([260], device='cuda:0'), tensor([245], device='cuda:0'), tensor([281], device='cuda:0'), tensor([766], device='cuda:0'), tensor([286], device='cuda:0'), tensor([611], device='cuda:0'), tensor([249], device='cuda:0'), tensor([76], device='cuda:0'), tensor([106], device='cuda:0'), tensor([77], device='cuda:0'), tensor([850], device='cuda:0'), tensor([281], device='cuda:0'), tensor([291], device='cuda:0'), tensor([378], device='cuda:0'), tensor([363], device='cuda:0'), tensor([293], device='cuda:0'), tensor([850], device='cuda:0'), tensor([841], device='cuda:0'), tensor([174], device='cuda:0'), tensor([242], device='cuda:0'), tensor([161], device='cuda:0'), tensor([615], device='cuda:0'), tensor([372], device='cuda:0'), tensor([333], device='cuda:0'), tensor([658], device='cuda:0')]
y_pred_l2: []
y_pred_hop_skip: []
y_pred_noise: [tensor([287], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([282], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([76], device='cuda:0'), tensor([287], device='cuda:0'), tensor([333], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([330], device='cuda:0'), tensor([279], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([356], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([279], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([330], device='cuda:0'), tensor([260], device='cuda:0'), tensor([174], device='cuda:0'), tensor([285], device='cuda:0'), tensor([568], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([359], device='cuda:0'), tensor([285], device='cuda:0')]
y_pred_semantic: [tensor([283], device='cuda:0'), tensor([196], device='cuda:0'), tensor([831], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([106], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([974], device='cuda:0'), tensor([279], device='cuda:0'), tensor([283], device='cuda:0'), tensor([331], device='cuda:0'), tensor([285], device='cuda:0'), tensor([383], device='cuda:0'), tensor([280], device='cuda:0'), tensor([223], device='cuda:0'), tensor([285], device='cuda:0'), tensor([258], device='cuda:0'), tensor([287], device='cuda:0'), tensor([333], device='cuda:0'), tensor([374], device='cuda:0'), tensor([285], device='cuda:0'), tensor([459], device='cuda:0'), tensor([281], device='cuda:0'), tensor([680], device='cuda:0'), tensor([996], device='cuda:0'), tensor([283], device='cuda:0'), tensor([359], device='cuda:0'), tensor([534], device='cuda:0'), tensor([280], device='cuda:0'), tensor([284], device='cuda:0'), tensor([181], device='cuda:0'), tensor([283], device='cuda:0'), tensor([287], device='cuda:0'), tensor([887], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0')]
y_pred_l1: [tensor([287], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([282], device='cuda:0'), tensor([287], device='cuda:0'), tensor([333], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([330], device='cuda:0'), tensor([279], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([332], device='cuda:0'), tensor([259], device='cuda:0'), tensor([285], device='cuda:0'), tensor([330], device='cuda:0'), tensor([285], device='cuda:0'), tensor([157], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([259], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([568], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0')]
y_pred_spsa: [tensor([287], device='cuda:0'), tensor([333], device='cuda:0'), tensor([289], device='cuda:0'), tensor([284], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([282], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([76], device='cuda:0'), tensor([287], device='cuda:0'), tensor([333], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([270], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([333], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([584], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([434], device='cuda:0'), tensor([260], device='cuda:0'), tensor([174], device='cuda:0'), tensor([281], device='cuda:0'), tensor([568], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([443], device='cuda:0'), tensor([285], device='cuda:0')]
time: [0.024001359939575195, 0.6118431091308594, 0.00099945068359375, 0.0, 0.03852128982543945, 0.4002354145050049, 0.019508838653564453, 0.5892462730407715, 0.0009982585906982422, 0.0, 0.038523197174072266, 0.3807947635650635, 0.024997711181640625, 0.61517333984375, 0.0010004043579101562, 0.0009999275207519531, 0.03852391242980957, 0.3809671401977539, 0.018997907638549805, 0.5769956111907959, 0.0, 0.0009989738464355469, 0.03699135780334473, 0.3763558864593506, 0.022520780563354492, 0.5830280780792236, 0.00099945068359375, 0.0009982585906982422, 0.03802967071533203, 0.387836217880249, 0.01900625228881836, 0.6047098636627197, 0.0009992122650146484, 0.0, 0.038547515869140625, 0.3872361183166504, 0.022998571395874023, 0.5815610885620117, 0.0010025501251220703, 0.0, 0.0413813591003418, 0.38193583488464355, 0.018999338150024414, 0.6244287490844727, 0.0009996891021728516, 0.0009996891021728516, 0.04204273223876953, 0.38375139236450195, 0.020000696182250977, 0.5955138206481934, 0.0013916492462158203, 0.0, 0.039934396743774414, 0.4177849292755127, 0.025920629501342773, 0.632352352142334, 0.0009992122650146484, 0.0, 0.04917597770690918, 0.38393235206604004, 0.023548603057861328, 0.5925431251525879, 0.0, 0.0009996891021728516, 0.03769659996032715, 0.3835265636444092, 0.021008968353271484, 0.5940427780151367, 0.0005385875701904297, 0.00099945068359375, 0.03960132598876953, 0.38345766067504883, 0.018999814987182617, 0.6015236377716064, 0.0007624626159667969, 0.0005135536193847656, 0.03800225257873535, 0.38399767875671387, 0.01999974250793457, 0.581493616104126, 0.0010023117065429688, 0.00015974044799804688, 0.03859138488769531, 0.38361454010009766, 0.0230257511138916, 0.5991134643554688, 0.0, 0.0009968280792236328, 0.03787541389465332, 0.38361358642578125, 0.02351546287536621, 0.6076390743255615, 0.0009996891021728516, 0.00099945068359375, 0.03897714614868164, 0.3873918056488037, 0.022000789642333984, 0.5622677803039551, 0.0009987354278564453, 0.0009996891021728516, 0.037845611572265625, 0.3867959976196289, 0.020447254180908203, 0.5833828449249268, 0.0010056495666503906, 0.0, 0.03800153732299805, 0.39374685287475586, 0.019711732864379883, 0.5779340267181396, 0.0010001659393310547, 0.0, 0.03751778602600098, 0.3881704807281494, 0.022995710372924805, 0.598151445388794, 0.0009989738464355469, 0.0, 0.03852033615112305, 0.3812141418457031, 0.023996591567993164, 0.5720527172088623, 0.0009975433349609375, 0.0, 0.03886532783508301, 0.38237476348876953, 0.024512767791748047, 0.5915260314941406, 0.0009987354278564453, 0.0010008811950683594, 0.0370020866394043, 0.40491724014282227, 0.019999980926513672, 0.6328005790710449, 0.0010001659393310547, 0.0010001659393310547, 0.038942813873291016, 0.38770008087158203, 0.020633220672607422, 0.5796992778778076, 0.0010001659393310547, 0.0009996891021728516, 0.03836774826049805, 0.38736915588378906, 0.022997379302978516, 0.6080203056335449, 0.0009989738464355469, 0.001003265380859375, 0.03903698921203613, 0.39971232414245605, 0.019007205963134766, 0.586693286895752, 0.0012049674987792969, 0.0, 0.03800034523010254, 0.38880372047424316, 0.01799941062927246, 0.6176285743713379, 0.00099945068359375, 0.0009996891021728516, 0.03933453559875488, 0.38734984397888184, 0.02051234245300293, 0.5979747772216797, 0.0009999275207519531, 0.0, 0.03802013397216797, 0.38349008560180664, 0.020000696182250977, 0.6152908802032471, 0.0010001659393310547, 0.0010023117065429688, 0.03831076622009277, 0.39957165718078613, 0.01999974250793457, 0.5898511409759521, 0.0009987354278564453, 0.001001596450805664, 0.039028167724609375, 0.38726305961608887, 0.024075031280517578, 0.5918667316436768, 0.001001596450805664, 0.0010001659393310547, 0.037520647048950195, 0.3835475444793701, 0.02200150489807129, 0.5949618816375732, 0.0, 0.0009987354278564453, 0.03935837745666504, 0.3844001293182373, 0.021518230438232422, 0.5889034271240234, 0.0, 0.001003265380859375, 0.03834414482116699, 0.3835291862487793, 0.02499699592590332, 0.6057281494140625, 0.0, 0.000997304916381836, 0.038739919662475586, 0.3834261894226074, 0.020999431610107422, 0.5847911834716797, 0.0009982585906982422, 0.0009999275207519531, 0.038523197174072266, 0.38434791564941406, 0.02351665496826172, 0.6148085594177246, 0.0010013580322265625, 0.0009989738464355469, 0.03783869743347168, 0.384746789932251, 0.019498586654663086, 0.5906128883361816, 0.0010004043579101562, 0.0009992122650146484, 0.03791642189025879, 0.3835294246673584, 0.01900935173034668, 0.5852670669555664, 0.001001119613647461, 0.00099945068359375, 0.039528608322143555, 0.3850443363189697, 0.01999807357788086, 0.5856530666351318, 0.0010001659393310547, 0.0009999275207519531, 0.03832125663757324, 0.3747091293334961, 0.0206451416015625, 0.5930225849151611, 0.00099945068359375, 0.0, 0.038519859313964844, 0.3854072093963623]
funcs_tested: 0
test acc on clean examples (%): 35.00
test acc on FGM adversarial examples (%): 0.00
test acc on PGD adversarial examples (%): 5.00
test acc on L2 adversarial examples (%): 0.00
test acc on HOP-SKIP-JUMP adversarial examples (%): 0.00
test acc on NOISE adversarial examples (%): 42.50
test acc on SEMANTIC adversarial examples (%): 15.00
test acc on L1 adversarial examples (%): 35.00
test acc on SPSA adversarial examples (%): 35.00

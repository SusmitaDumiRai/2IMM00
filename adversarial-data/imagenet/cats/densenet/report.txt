nb_test: 40
correct: 19
correct_fgm: 11
correct_pgd: 8
correct_l2: 0
correct_hop_skip: 0
correct_noise: 19
correct_semantic: 13
correct_l1: 18
correct_spsa: 0
y_pred: [tensor([281], device='cuda:0'), tensor([478], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([287], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([284], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([284], device='cuda:0')]
y_pred_fgm: [tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([331], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([469], device='cuda:0'), tensor([157], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([262], device='cuda:0'), tensor([539], device='cuda:0'), tensor([285], device='cuda:0'), tensor([797], device='cuda:0'), tensor([187], device='cuda:0'), tensor([285], device='cuda:0'), tensor([287], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([282], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([282], device='cuda:0'), tensor([279], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([279], device='cuda:0'), tensor([568], device='cuda:0'), tensor([282], device='cuda:0'), tensor([284], device='cuda:0'), tensor([374], device='cuda:0'), tensor([492], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0')]
y_pred_pgd: [tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([157], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([435], device='cuda:0'), tensor([443], device='cuda:0'), tensor([285], device='cuda:0'), tensor([431], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([287], device='cuda:0'), tensor([285], device='cuda:0'), tensor([797], device='cuda:0'), tensor([285], device='cuda:0'), tensor([292], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([292], device='cuda:0'), tensor([435], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([435], device='cuda:0'), tensor([287], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([249], device='cuda:0'), tensor([282], device='cuda:0'), tensor([491], device='cuda:0'), tensor([374], device='cuda:0'), tensor([492], device='cuda:0'), tensor([567], device='cuda:0'), tensor([283], device='cuda:0')]
y_pred_l2: []
y_pred_hop_skip: []
y_pred_noise: [tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([287], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([431], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([284], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0')]
y_pred_semantic: [tensor([285], device='cuda:0'), tensor([412], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([287], device='cuda:0'), tensor([287], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([223], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([285], device='cuda:0'), tensor([283], device='cuda:0'), tensor([354], device='cuda:0'), tensor([283], device='cuda:0'), tensor([380], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0')]
y_pred_l1: [tensor([281], device='cuda:0'), tensor([728], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([287], device='cuda:0'), tensor([283], device='cuda:0'), tensor([285], device='cuda:0'), tensor([281], device='cuda:0'), tensor([431], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([287], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([284], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([281], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([281], device='cuda:0'), tensor([285], device='cuda:0'), tensor([284], device='cuda:0'), tensor([281], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([283], device='cuda:0'), tensor([281], device='cuda:0')]
y_pred_spsa: []
time: [0.10699987411499023, 2.384998321533203, 0.01900029182434082, 0.017999887466430664, 1.0845966339111328, 0.10700058937072754, 2.3850502967834473, 0.019001007080078125, 0.019000530242919922, 1.0848376750946045, 0.09599995613098145, 2.376999855041504, 0.01900005340576172, 0.019001245498657227, 1.0840961933135986, 0.09500002861022949, 2.3638079166412354, 0.01900029182434082, 0.018999576568603516, 1.083282709121704, 0.0950002670288086, 2.556997776031494, 0.019000530242919922, 0.017999887466430664, 1.088026762008667, 0.0950007438659668, 2.3669991493225098, 0.018999576568603516, 0.018999576568603516, 1.0831665992736816, 0.09500002861022949, 2.377999782562256, 0.01900005340576172, 0.018999576568603516, 1.0839290618896484, 0.0969996452331543, 2.495999574661255, 0.019999980926513672, 0.019999027252197266, 1.2995190620422363, 0.10400032997131348, 2.370999813079834, 0.01900005340576172, 0.01799917221069336, 1.0837032794952393, 0.09499979019165039, 2.357999324798584, 0.018999576568603516, 0.019000530242919922, 1.0869965553283691, 0.09499979019165039, 2.5920000076293945, 0.01900005340576172, 0.019001007080078125, 1.0810925960540771, 0.0950002670288086, 2.370999336242676, 0.01800060272216797, 0.01900005340576172, 1.0845985412597656, 0.09499979019165039, 2.4679996967315674, 0.018999338150024414, 0.018999576568603516, 1.0837492942810059, 0.0969996452331543, 2.3610000610351562, 0.01999974250793457, 0.019999265670776367, 1.0967233180999756, 0.09500002861022949, 2.3560009002685547, 0.018999576568603516, 0.018001794815063477, 1.0870988368988037, 0.10199952125549316, 2.3999998569488525, 0.019001245498657227, 0.018999814987182617, 1.2899301052093506, 0.10299921035766602, 2.382999897003174, 0.019000530242919922, 0.019000530242919922, 1.0839564800262451, 0.09400057792663574, 2.517000198364258, 0.01899886131286621, 0.01900005340576172, 1.2123806476593018, 0.09500002861022949, 2.362002372741699, 0.018999814987182617, 0.01900458335876465, 1.0848209857940674, 0.0970001220703125, 2.4380009174346924, 0.019000768661499023, 0.01900029182434082, 1.131098985671997, 0.09499979019165039, 2.369999408721924, 0.018999814987182617, 0.018000125885009766, 1.0785233974456787, 0.0950005054473877, 2.355999708175659, 0.018999814987182617, 0.018000125885009766, 1.2148656845092773, 0.09600043296813965, 2.3810007572174072, 0.018999814987182617, 0.01800060272216797, 1.1013624668121338, 0.09499979019165039, 2.3600001335144043, 0.017995834350585938, 0.019000530242919922, 1.0852940082550049, 0.09499931335449219, 2.4570019245147705, 0.018999576568603516, 0.017999887466430664, 1.2247114181518555, 0.09499979019165039, 2.363999128341675, 0.01999974250793457, 0.01900005340576172, 1.0897867679595947, 0.09500002861022949, 2.5230000019073486, 0.01799917221069336, 0.018999338150024414, 1.0938425064086914, 0.09600019454956055, 2.374999523162842, 0.01900196075439453, 0.017999887466430664, 1.1841857433319092, 0.09499835968017578, 2.376338243484497, 0.01900005340576172, 0.017999887466430664, 1.0857789516448975, 0.11200070381164551, 2.564239263534546, 0.01900005340576172, 0.01799941062927246, 1.0861868858337402, 0.11800241470336914, 2.5230021476745605, 0.019000530242919922, 0.01900005340576172, 1.092505693435669, 0.09599995613098145, 2.365999698638916, 0.019999027252197266, 0.020000696182250977, 1.0862371921539307, 0.09599900245666504, 2.463003158569336, 0.020999908447265625, 0.020000457763671875, 1.0850005149841309, 0.09800004959106445, 2.530001640319824, 0.01900005340576172, 0.019999265670776367, 1.0999996662139893, 0.10199904441833496, 2.5009970664978027, 0.018999338150024414, 0.019000530242919922, 1.0867671966552734, 0.0970008373260498, 2.365997552871704, 0.017999649047851562, 0.018999576568603516, 1.079793930053711, 0.09599924087524414, 2.3580007553100586, 0.01999950408935547, 0.019000768661499023, 1.0806643962860107, 0.09499931335449219, 2.4719998836517334, 0.017999887466430664, 0.018999338150024414, 1.0880990028381348, 0.09599947929382324, 2.3620002269744873, 0.017997026443481445, 0.017999649047851562, 1.0870845317840576, 0.09599876403808594, 2.3580000400543213, 0.019000768661499023, 0.01800084114074707, 1.083611011505127]
funcs_tested: 0
test acc on clean examples (%): 47.50
test acc on FGM adversarial examples (%): 27.50
test acc on PGD adversarial examples (%): 20.00
test acc on L2 adversarial examples (%): 0.00
test acc on HOP-SKIP-JUMP adversarial examples (%): 0.00
test acc on NOISE adversarial examples (%): 47.50
test acc on SEMANTIC adversarial examples (%): 32.50
test acc on L1 adversarial examples (%): 45.00
test acc on SPSA adversarial examples (%): 0.00

nb_test: 40
correct: 32
correct_fgm: 4
correct_pgd: 0
correct_l2: 0
correct_hop_skip: 0
correct_noise: 30
correct_semantic: 8
correct_l1: 32
correct_spsa: 0
y_pred: [tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([948], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([945], device='cuda:0'), tensor([943], device='cuda:0'), tensor([929], device='cuda:0'), tensor([945], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([929], device='cuda:0'), tensor([943], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([929], device='cuda:0'), tensor([943], device='cuda:0'), tensor([929], device='cuda:0'), tensor([943], device='cuda:0'), tensor([938], device='cuda:0'), tensor([938], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0'), tensor([929], device='cuda:0'), tensor([943], device='cuda:0'), tensor([943], device='cuda:0'), tensor([943], device='cuda:0'), tensor([938], device='cuda:0'), tensor([929], device='cuda:0'), tensor([936], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0')]
y_pred_fgm: [tensor([956], device='cuda:0'), tensor([524], device='cuda:0'), tensor([501], device='cuda:0'), tensor([945], device='cuda:0'), tensor([51], device='cuda:0'), tensor([945], device='cuda:0'), tensor([747], device='cuda:0'), tensor([524], device='cuda:0'), tensor([6], device='cuda:0'), tensor([950], device='cuda:0'), tensor([956], device='cuda:0'), tensor([112], device='cuda:0'), tensor([945], device='cuda:0'), tensor([452], device='cuda:0'), tensor([524], device='cuda:0'), tensor([6], device='cuda:0'), tensor([6], device='cuda:0'), tensor([956], device='cuda:0'), tensor([990], device='cuda:0'), tensor([6], device='cuda:0'), tensor([524], device='cuda:0'), tensor([461], device='cuda:0'), tensor([524], device='cuda:0'), tensor([265], device='cuda:0'), tensor([956], device='cuda:0'), tensor([265], device='cuda:0'), tensor([945], device='cuda:0'), tensor([939], device='cuda:0'), tensor([892], device='cuda:0'), tensor([265], device='cuda:0'), tensor([452], device='cuda:0'), tensor([411], device='cuda:0'), tensor([474], device='cuda:0'), tensor([394], device='cuda:0'), tensor([775], device='cuda:0'), tensor([931], device='cuda:0'), tensor([6], device='cuda:0'), tensor([643], device='cuda:0'), tensor([341], device='cuda:0'), tensor([51], device='cuda:0')]
y_pred_pgd: [tensor([529], device='cuda:0'), tensor([524], device='cuda:0'), tensor([411], device='cuda:0'), tensor([989], device='cuda:0'), tensor([452], device='cuda:0'), tensor([512], device='cuda:0'), tensor([747], device='cuda:0'), tensor([524], device='cuda:0'), tensor([700], device='cuda:0'), tensor([967], device='cuda:0'), tensor([956], device='cuda:0'), tensor([452], device='cuda:0'), tensor([939], device='cuda:0'), tensor([452], device='cuda:0'), tensor([524], device='cuda:0'), tensor([310], device='cuda:0'), tensor([310], device='cuda:0'), tensor([643], device='cuda:0'), tensor([990], device='cuda:0'), tensor([310], device='cuda:0'), tensor([524], device='cuda:0'), tensor([310], device='cuda:0'), tensor([524], device='cuda:0'), tensor([956], device='cuda:0'), tensor([956], device='cuda:0'), tensor([956], device='cuda:0'), tensor([989], device='cuda:0'), tensor([939], device='cuda:0'), tensor([529], device='cuda:0'), tensor([956], device='cuda:0'), tensor([452], device='cuda:0'), tensor([941], device='cuda:0'), tensor([524], device='cuda:0'), tensor([106], device='cuda:0'), tensor([260], device='cuda:0'), tensor([956], device='cuda:0'), tensor([310], device='cuda:0'), tensor([965], device='cuda:0'), tensor([956], device='cuda:0'), tensor([965], device='cuda:0')]
y_pred_l2: []
y_pred_hop_skip: []
y_pred_noise: [tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([885], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([945], device='cuda:0'), tensor([943], device='cuda:0'), tensor([78], device='cuda:0'), tensor([945], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([794], device='cuda:0'), tensor([78], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([794], device='cuda:0'), tensor([943], device='cuda:0'), tensor([78], device='cuda:0'), tensor([524], device='cuda:0'), tensor([938], device='cuda:0'), tensor([938], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0'), tensor([942], device='cuda:0'), tensor([943], device='cuda:0'), tensor([971], device='cuda:0'), tensor([943], device='cuda:0'), tensor([938], device='cuda:0'), tensor([78], device='cuda:0'), tensor([936], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0')]
y_pred_semantic: [tensor([936], device='cuda:0'), tensor([929], device='cuda:0'), tensor([929], device='cuda:0'), tensor([5], device='cuda:0'), tensor([936], device='cuda:0'), tensor([5], device='cuda:0'), tensor([107], device='cuda:0'), tensor([994], device='cuda:0'), tensor([929], device='cuda:0'), tensor([107], device='cuda:0'), tensor([793], device='cuda:0'), tensor([936], device='cuda:0'), tensor([502], device='cuda:0'), tensor([936], device='cuda:0'), tensor([929], device='cuda:0'), tensor([929], device='cuda:0'), tensor([929], device='cuda:0'), tensor([599], device='cuda:0'), tensor([107], device='cuda:0'), tensor([929], device='cuda:0'), tensor([929], device='cuda:0'), tensor([929], device='cuda:0'), tensor([929], device='cuda:0'), tensor([107], device='cuda:0'), tensor([107], device='cuda:0'), tensor([793], device='cuda:0'), tensor([5], device='cuda:0'), tensor([502], device='cuda:0'), tensor([936], device='cuda:0'), tensor([107], device='cuda:0'), tensor([936], device='cuda:0'), tensor([929], device='cuda:0'), tensor([929], device='cuda:0'), tensor([111], device='cuda:0'), tensor([929], device='cuda:0'), tensor([599], device='cuda:0'), tensor([929], device='cuda:0'), tensor([936], device='cuda:0'), tensor([599], device='cuda:0'), tensor([936], device='cuda:0')]
y_pred_l1: [tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([929], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([945], device='cuda:0'), tensor([943], device='cuda:0'), tensor([943], device='cuda:0'), tensor([945], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([942], device='cuda:0'), tensor([78], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([943], device='cuda:0'), tensor([943], device='cuda:0'), tensor([942], device='cuda:0'), tensor([943], device='cuda:0'), tensor([938], device='cuda:0'), tensor([938], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0'), tensor([942], device='cuda:0'), tensor([943], device='cuda:0'), tensor([943], device='cuda:0'), tensor([943], device='cuda:0'), tensor([938], device='cuda:0'), tensor([773], device='cuda:0'), tensor([936], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0')]
y_pred_spsa: []
time: [0.1119997501373291, 2.6229445934295654, 0.017999887466430664, 0.018000125885009766, 1.2014126777648926, 0.10599899291992188, 2.5739998817443848, 0.018999814987182617, 0.018000125885009766, 1.1046977043151855, 0.09600019454956055, 2.4399993419647217, 0.018999099731445312, 0.01799750328063965, 1.1012797355651855, 0.0989995002746582, 2.505650520324707, 0.018999099731445312, 0.017999887466430664, 1.095210075378418, 0.0969998836517334, 2.364999771118164, 0.018000125885009766, 0.017999649047851562, 1.106677770614624, 0.09600019454956055, 2.3951313495635986, 0.018000364303588867, 0.018000125885009766, 1.0857667922973633, 0.09599971771240234, 2.4050989151000977, 0.018000125885009766, 0.017999887466430664, 1.0873570442199707, 0.09599971771240234, 2.381999969482422, 0.019000530242919922, 0.01799917221069336, 1.0978641510009766, 0.10100054740905762, 2.496177911758423, 0.01999974250793457, 0.01899886131286621, 1.1883957386016846, 0.09600019454956055, 2.484999656677246, 0.018999099731445312, 0.019001483917236328, 1.2224600315093994, 0.10399937629699707, 2.417999267578125, 0.01900005340576172, 0.017999887466430664, 1.086954116821289, 0.09800148010253906, 2.457008123397827, 0.018999338150024414, 0.01900029182434082, 1.161811113357544, 0.10899901390075684, 2.5590009689331055, 0.019000530242919922, 0.019000768661499023, 1.1600778102874756, 0.10000205039978027, 2.4834468364715576, 0.01799941062927246, 0.01799941062927246, 1.0936732292175293, 0.09599995613098145, 2.5328943729400635, 0.01800060272216797, 0.019000530242919922, 1.1125984191894531, 0.10200023651123047, 2.5141704082489014, 0.018000125885009766, 0.01899862289428711, 1.109570026397705, 0.0970001220703125, 2.4110000133514404, 0.018000364303588867, 0.01799941062927246, 1.2109289169311523, 0.09751343727111816, 2.435997724533081, 0.018999576568603516, 0.017998695373535156, 1.1185758113861084, 0.09599971771240234, 2.5490007400512695, 0.01900005340576172, 0.01800084114074707, 1.0945332050323486, 0.09599852561950684, 2.416001081466675, 0.018999099731445312, 0.017999887466430664, 1.12784743309021, 0.09599900245666504, 2.4186975955963135, 0.018002033233642578, 0.017999887466430664, 1.146162509918213, 0.10400009155273438, 2.4040000438690186, 0.018999576568603516, 0.01900005340576172, 1.0973470211029053, 0.10500049591064453, 2.465000867843628, 0.018999576568603516, 0.019001007080078125, 1.084709882736206, 0.09551143646240234, 2.381999969482422, 0.019000768661499023, 0.017999887466430664, 1.1513338088989258, 0.10800027847290039, 2.4709980487823486, 0.01800060272216797, 0.01799941062927246, 1.1247143745422363, 0.09856748580932617, 2.374908447265625, 0.01900005340576172, 0.01900005340576172, 1.0920007228851318, 0.10500121116638184, 2.471999406814575, 0.018000364303588867, 0.018000125885009766, 1.0908193588256836, 0.09600019454956055, 2.47200083732605, 0.01900029182434082, 0.018001079559326172, 1.0947990417480469, 0.09499955177307129, 2.4549996852874756, 0.019002437591552734, 0.01799917221069336, 1.0970942974090576, 0.0989997386932373, 2.4019968509674072, 0.01900029182434082, 0.017999887466430664, 1.0973584651947021, 0.0970003604888916, 2.5089988708496094, 0.019000768661499023, 0.01799941062927246, 1.2079846858978271, 0.09600043296813965, 2.4318783283233643, 0.019999980926513672, 0.018999814987182617, 1.1079127788543701, 0.09599947929382324, 2.3809995651245117, 0.017999887466430664, 0.017998456954956055, 1.0931735038757324, 0.095001220703125, 2.365000009536743, 0.018000125885009766, 0.018000125885009766, 1.0847060680389404, 0.0950002670288086, 2.3649990558624268, 0.01799941062927246, 0.017999887466430664, 1.0877649784088135, 0.09599995613098145, 2.3668293952941895, 0.01799941062927246, 0.018000125885009766, 1.0905897617340088, 0.09600067138671875, 2.362999677658081, 0.01900005340576172, 0.01900005340576172, 1.0882909297943115, 0.0950002670288086, 2.36899995803833, 0.01799941062927246, 0.01799917221069336, 1.0880167484283447, 0.09599947929382324, 2.3959999084472656, 0.019000530242919922, 0.01799917221069336, 1.0884647369384766, 0.09599757194519043, 2.367000102996826, 0.01900005340576172, 0.017999887466430664, 1.0892751216888428]
funcs_tested: 0
test acc on clean examples (%): 80.00
test acc on FGM adversarial examples (%): 10.00
test acc on PGD adversarial examples (%): 0.00
test acc on L2 adversarial examples (%): 0.00
test acc on HOP-SKIP-JUMP adversarial examples (%): 0.00
test acc on NOISE adversarial examples (%): 75.00
test acc on SEMANTIC adversarial examples (%): 20.00
test acc on L1 adversarial examples (%): 80.00
test acc on SPSA adversarial examples (%): 0.00

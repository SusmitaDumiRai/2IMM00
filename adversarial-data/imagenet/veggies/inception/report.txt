nb_test: 40
correct: 31
correct_fgm: 5
correct_pgd: 1
correct_l2: 0
correct_hop_skip: 0
correct_noise: 29
correct_semantic: 2
correct_l1: 32
correct_spsa: 0
y_pred: [tensor([943], device='cuda:0'), tensor([929], device='cuda:0'), tensor([936], device='cuda:0'), tensor([929], device='cuda:0'), tensor([682], device='cuda:0'), tensor([936], device='cuda:0'), tensor([682], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([938], device='cuda:0'), tensor([938], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([943], device='cuda:0'), tensor([943], device='cuda:0'), tensor([505], device='cuda:0'), tensor([943], device='cuda:0'), tensor([945], device='cuda:0'), tensor([943], device='cuda:0'), tensor([936], device='cuda:0'), tensor([938], device='cuda:0'), tensor([956], device='cuda:0'), tensor([945], device='cuda:0'), tensor([682], device='cuda:0'), tensor([942], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([945], device='cuda:0'), tensor([938], device='cuda:0'), tensor([943], device='cuda:0'), tensor([936], device='cuda:0'), tensor([941], device='cuda:0'), tensor([943], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0')]
y_pred_fgm: [tensor([652], device='cuda:0'), tensor([794], device='cuda:0'), tensor([797], device='cuda:0'), tensor([794], device='cuda:0'), tensor([452], device='cuda:0'), tensor([936], device='cuda:0'), tensor([725], device='cuda:0'), tensor([956], device='cuda:0'), tensor([936], device='cuda:0'), tensor([216], device='cuda:0'), tensor([956], device='cuda:0'), tensor([956], device='cuda:0'), tensor([956], device='cuda:0'), tensor([841], device='cuda:0'), tensor([883], device='cuda:0'), tensor([988], device='cuda:0'), tensor([945], device='cuda:0'), tensor([245], device='cuda:0'), tensor([179], device='cuda:0'), tensor([725], device='cuda:0'), tensor([465], device='cuda:0'), tensor([990], device='cuda:0'), tensor([188], device='cuda:0'), tensor([936], device='cuda:0'), tensor([956], device='cuda:0'), tensor([938], device='cuda:0'), tensor([941], device='cuda:0'), tensor([725], device='cuda:0'), tensor([434], device='cuda:0'), tensor([615], device='cuda:0'), tensor([452], device='cuda:0'), tensor([941], device='cuda:0'), tensor([615], device='cuda:0'), tensor([956], device='cuda:0'), tensor([652], device='cuda:0'), tensor([344], device='cuda:0'), tensor([411], device='cuda:0'), tensor([652], device='cuda:0'), tensor([793], device='cuda:0'), tensor([957], device='cuda:0')]
y_pred_pgd: [tensor([461], device='cuda:0'), tensor([682], device='cuda:0'), tensor([163], device='cuda:0'), tensor([682], device='cuda:0'), tensor([38], device='cuda:0'), tensor([163], device='cuda:0'), tensor([929], device='cuda:0'), tensor([944], device='cuda:0'), tensor([341], device='cuda:0'), tensor([461], device='cuda:0'), tensor([944], device='cuda:0'), tensor([944], device='cuda:0'), tensor([956], device='cuda:0'), tensor([452], device='cuda:0'), tensor([948], device='cuda:0'), tensor([944], device='cuda:0'), tensor([941], device='cuda:0'), tensor([524], device='cuda:0'), tensor([276], device='cuda:0'), tensor([682], device='cuda:0'), tensor([276], device='cuda:0'), tensor([990], device='cuda:0'), tensor([366], device='cuda:0'), tensor([163], device='cuda:0'), tensor([956], device='cuda:0'), tensor([938], device='cuda:0'), tensor([941], device='cuda:0'), tensor([773], device='cuda:0'), tensor([505], device='cuda:0'), tensor([615], device='cuda:0'), tensor([636], device='cuda:0'), tensor([941], device='cuda:0'), tensor([939], device='cuda:0'), tensor([956], device='cuda:0'), tensor([295], device='cuda:0'), tensor([163], device='cuda:0'), tensor([649], device='cuda:0'), tensor([652], device='cuda:0'), tensor([163], device='cuda:0'), tensor([957], device='cuda:0')]
y_pred_l2: []
y_pred_hop_skip: []
y_pred_noise: [tensor([943], device='cuda:0'), tensor([682], device='cuda:0'), tensor([936], device='cuda:0'), tensor([682], device='cuda:0'), tensor([682], device='cuda:0'), tensor([936], device='cuda:0'), tensor([682], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0'), tensor([461], device='cuda:0'), tensor([938], device='cuda:0'), tensor([938], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([943], device='cuda:0'), tensor([943], device='cuda:0'), tensor([682], device='cuda:0'), tensor([943], device='cuda:0'), tensor([945], device='cuda:0'), tensor([461], device='cuda:0'), tensor([936], device='cuda:0'), tensor([938], device='cuda:0'), tensor([956], device='cuda:0'), tensor([945], device='cuda:0'), tensor([682], device='cuda:0'), tensor([942], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([945], device='cuda:0'), tensor([938], device='cuda:0'), tensor([943], device='cuda:0'), tensor([936], device='cuda:0'), tensor([708], device='cuda:0'), tensor([943], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0')]
y_pred_semantic: [tensor([994], device='cuda:0'), tensor([929], device='cuda:0'), tensor([793], device='cuda:0'), tensor([725], device='cuda:0'), tensor([725], device='cuda:0'), tensor([749], device='cuda:0'), tensor([725], device='cuda:0'), tensor([599], device='cuda:0'), tensor([936], device='cuda:0'), tensor([928], device='cuda:0'), tensor([599], device='cuda:0'), tensor([599], device='cuda:0'), tensor([599], device='cuda:0'), tensor([793], device='cuda:0'), tensor([719], device='cuda:0'), tensor([599], device='cuda:0'), tensor([529], device='cuda:0'), tensor([994], device='cuda:0'), tensor([994], device='cuda:0'), tensor([725], device='cuda:0'), tensor([994], device='cuda:0'), tensor([107], device='cuda:0'), tensor([994], device='cuda:0'), tensor([749], device='cuda:0'), tensor([599], device='cuda:0'), tensor([599], device='cuda:0'), tensor([986], device='cuda:0'), tensor([929], device='cuda:0'), tensor([725], device='cuda:0'), tensor([502], device='cuda:0'), tensor([793], device='cuda:0'), tensor([940], device='cuda:0'), tensor([502], device='cuda:0'), tensor([599], device='cuda:0'), tensor([994], device='cuda:0'), tensor([749], device='cuda:0'), tensor([773], device='cuda:0'), tensor([994], device='cuda:0'), tensor([936], device='cuda:0'), tensor([728], device='cuda:0')]
y_pred_l1: [tensor([943], device='cuda:0'), tensor([682], device='cuda:0'), tensor([936], device='cuda:0'), tensor([682], device='cuda:0'), tensor([929], device='cuda:0'), tensor([936], device='cuda:0'), tensor([929], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([938], device='cuda:0'), tensor([938], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([943], device='cuda:0'), tensor([943], device='cuda:0'), tensor([505], device='cuda:0'), tensor([943], device='cuda:0'), tensor([945], device='cuda:0'), tensor([943], device='cuda:0'), tensor([936], device='cuda:0'), tensor([938], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([929], device='cuda:0'), tensor([942], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([945], device='cuda:0'), tensor([938], device='cuda:0'), tensor([943], device='cuda:0'), tensor([936], device='cuda:0'), tensor([804], device='cuda:0'), tensor([943], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0')]
y_pred_spsa: []
time: [0.09200000762939453, 2.113999843597412, 0.009999990463256836, 0.010000228881835938, 0.8948924541473389, 0.09300065040588379, 2.0850002765655518, 0.009999752044677734, 0.01000356674194336, 0.8892145156860352, 0.09399914741516113, 2.0900001525878906, 0.01000070571899414, 0.011001110076904297, 0.8920040130615234, 0.09299874305725098, 2.0890002250671387, 0.01100015640258789, 0.010000467300415039, 0.890387773513794, 0.09299945831298828, 2.0970001220703125, 0.010000467300415039, 0.009998798370361328, 0.9084117412567139, 0.10799980163574219, 2.399000883102417, 0.011001110076904297, 0.009999752044677734, 0.9922833442687988, 0.10899996757507324, 2.204000949859619, 0.010000228881835938, 0.010999202728271484, 0.8947787284851074, 0.09400057792663574, 2.180999994277954, 0.009999275207519531, 0.009999275207519531, 0.9724161624908447, 0.1119997501373291, 2.122000217437744, 0.01000213623046875, 0.01000070571899414, 0.8948168754577637, 0.09400033950805664, 2.1960020065307617, 0.011001348495483398, 0.009999752044677734, 0.8849012851715088, 0.09299993515014648, 2.123000383377075, 0.009999275207519531, 0.009999990463256836, 0.9248561859130859, 0.10899925231933594, 2.1439995765686035, 0.010000467300415039, 0.009999513626098633, 1.0145652294158936, 0.09399986267089844, 2.140000104904175, 0.010000228881835938, 0.009999990463256836, 0.8926045894622803, 0.11400008201599121, 2.271000862121582, 0.010000944137573242, 0.009001016616821289, 0.8853461742401123, 0.09699869155883789, 2.1220006942749023, 0.011000633239746094, 0.011001825332641602, 0.9221222400665283, 0.09400248527526855, 2.1939921379089355, 0.011000871658325195, 0.023000717163085938, 0.9630317687988281, 0.0969998836517334, 2.300002098083496, 0.011298656463623047, 0.010000228881835938, 0.967470645904541, 0.10100126266479492, 2.181006908416748, 0.011000394821166992, 0.009999752044677734, 0.9116244316101074, 0.10100150108337402, 2.210999011993408, 0.010000467300415039, 0.010000228881835938, 0.8973536491394043, 0.09400010108947754, 2.1069998741149902, 0.01000070571899414, 0.010001182556152344, 0.8865690231323242, 0.09800004959106445, 2.164001703262329, 0.010000944137573242, 0.009998798370361328, 0.9113030433654785, 0.09300017356872559, 2.205514907836914, 0.009999990463256836, 0.009999990463256836, 0.9589009284973145, 0.10199928283691406, 2.257000207901001, 0.011000871658325195, 0.011000394821166992, 0.9362287521362305, 0.10900020599365234, 2.3970000743865967, 0.011002063751220703, 0.009999752044677734, 0.9292550086975098, 0.09699892997741699, 2.3190016746520996, 0.0110015869140625, 0.01099848747253418, 1.0283231735229492, 0.11800003051757812, 2.212001085281372, 0.0110015869140625, 0.009997844696044922, 0.9274349212646484, 0.09499979019165039, 2.2420005798339844, 0.009998321533203125, 0.010999679565429688, 0.88850998878479, 0.09400010108947754, 2.1160004138946533, 0.009999752044677734, 0.009999752044677734, 0.9025306701660156, 0.11300086975097656, 2.161999464035034, 0.010000944137573242, 0.010002613067626953, 0.9744124412536621, 0.10300135612487793, 2.3710029125213623, 0.011000394821166992, 0.0110015869140625, 0.9665491580963135, 0.09599995613098145, 2.171999454498291, 0.011001110076904297, 0.010999917984008789, 0.9422132968902588, 0.10299992561340332, 2.1305179595947266, 0.009999752044677734, 0.011002063751220703, 1.021056890487671, 0.09400010108947754, 2.1730005741119385, 0.010999917984008789, 0.011002302169799805, 0.8943419456481934, 0.09299993515014648, 2.084000587463379, 0.011000871658325195, 0.009999275207519531, 0.9455904960632324, 0.10900115966796875, 2.149000406265259, 0.00999903678894043, 0.009999513626098633, 0.8870718479156494, 0.13300061225891113, 2.385000228881836, 0.010000467300415039, 0.009999513626098633, 1.0641124248504639, 0.09400057792663574, 2.088000535964966, 0.01000070571899414, 0.009999513626098633, 0.8936376571655273, 0.09399890899658203, 2.1333167552948, 0.01100015640258789, 0.010000228881835938, 0.9700512886047363, 0.13400006294250488, 2.361999273300171, 0.010999441146850586, 0.011000394821166992, 0.9703598022460938, 0.10299992561340332, 2.092001438140869, 0.009999752044677734, 0.010000944137573242, 0.8850862979888916]
funcs_tested: 0
test acc on clean examples (%): 77.50
test acc on FGM adversarial examples (%): 12.50
test acc on PGD adversarial examples (%): 2.50
test acc on L2 adversarial examples (%): 0.00
test acc on HOP-SKIP-JUMP adversarial examples (%): 0.00
test acc on NOISE adversarial examples (%): 72.50
test acc on SEMANTIC adversarial examples (%): 5.00
test acc on L1 adversarial examples (%): 80.00
test acc on SPSA adversarial examples (%): 0.00

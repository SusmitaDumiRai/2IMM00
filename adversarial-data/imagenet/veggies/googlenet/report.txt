nb_test: 40
correct: 32
correct_fgm: 0
correct_pgd: 0
correct_l2: 0
correct_hop_skip: 0
correct_noise: 25
correct_semantic: 4
correct_l1: 32
correct_spsa: 0
y_pred: [tensor([943], device='cuda:0'), tensor([943], device='cuda:0'), tensor([940], device='cuda:0'), tensor([940], device='cuda:0'), tensor([938], device='cuda:0'), tensor([940], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0'), tensor([938], device='cuda:0'), tensor([940], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([943], device='cuda:0'), tensor([943], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([938], device='cuda:0'), tensor([940], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([940], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([940], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([943], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([938], device='cuda:0'), tensor([943], device='cuda:0'), tensor([945], device='cuda:0'), tensor([940], device='cuda:0')]
y_pred_fgm: [tensor([655], device='cuda:0'), tensor([496], device='cuda:0'), tensor([794], device='cuda:0'), tensor([539], device='cuda:0'), tensor([956], device='cuda:0'), tensor([794], device='cuda:0'), tensor([956], device='cuda:0'), tensor([209], device='cuda:0'), tensor([956], device='cuda:0'), tensor([411], device='cuda:0'), tensor([597], device='cuda:0'), tensor([841], device='cuda:0'), tensor([956], device='cuda:0'), tensor([714], device='cuda:0'), tensor([105], device='cuda:0'), tensor([181], device='cuda:0'), tensor([714], device='cuda:0'), tensor([993], device='cuda:0'), tensor([956], device='cuda:0'), tensor([658], device='cuda:0'), tensor([956], device='cuda:0'), tensor([794], device='cuda:0'), tensor([956], device='cuda:0'), tensor([852], device='cuda:0'), tensor([794], device='cuda:0'), tensor([209], device='cuda:0'), tensor([496], device='cuda:0'), tensor([529], device='cuda:0'), tensor([794], device='cuda:0'), tensor([887], device='cuda:0'), tensor([852], device='cuda:0'), tensor([209], device='cuda:0'), tensor([474], device='cuda:0'), tensor([655], device='cuda:0'), tensor([209], device='cuda:0'), tensor([655], device='cuda:0'), tensor([956], device='cuda:0'), tensor([655], device='cuda:0'), tensor([461], device='cuda:0'), tensor([411], device='cuda:0')]
y_pred_pgd: [tensor([524], device='cuda:0'), tensor([524], device='cuda:0'), tensor([892], device='cuda:0'), tensor([700], device='cuda:0'), tensor([993], device='cuda:0'), tensor([794], device='cuda:0'), tensor([993], device='cuda:0'), tensor([286], device='cuda:0'), tensor([993], device='cuda:0'), tensor([794], device='cuda:0'), tensor([686], device='cuda:0'), tensor([291], device='cuda:0'), tensor([993], device='cuda:0'), tensor([658], device='cuda:0'), tensor([195], device='cuda:0'), tensor([180], device='cuda:0'), tensor([419], device='cuda:0'), tensor([529], device='cuda:0'), tensor([956], device='cuda:0'), tensor([948], device='cuda:0'), tensor([956], device='cuda:0'), tensor([794], device='cuda:0'), tensor([993], device='cuda:0'), tensor([852], device='cuda:0'), tensor([591], device='cuda:0'), tensor([216], device='cuda:0'), tensor([948], device='cuda:0'), tensor([841], device='cuda:0'), tensor([700], device='cuda:0'), tensor([151], device='cuda:0'), tensor([430], device='cuda:0'), tensor([286], device='cuda:0'), tensor([655], device='cuda:0'), tensor([869], device='cuda:0'), tensor([178], device='cuda:0'), tensor([524], device='cuda:0'), tensor([956], device='cuda:0'), tensor([524], device='cuda:0'), tensor([686], device='cuda:0'), tensor([411], device='cuda:0')]
y_pred_l2: []
y_pred_hop_skip: []
y_pred_noise: [tensor([524], device='cuda:0'), tensor([943], device='cuda:0'), tensor([928], device='cuda:0'), tensor([549], device='cuda:0'), tensor([938], device='cuda:0'), tensor([692], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0'), tensor([938], device='cuda:0'), tensor([794], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([943], device='cuda:0'), tensor([461], device='cuda:0'), tensor([945], device='cuda:0'), tensor([793], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([956], device='cuda:0'), tensor([929], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([965], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([529], device='cuda:0'), tensor([928], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([965], device='cuda:0'), tensor([943], device='cuda:0'), tensor([943], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([956], device='cuda:0'), tensor([943], device='cuda:0'), tensor([945], device='cuda:0'), tensor([794], device='cuda:0')]
y_pred_semantic: [tensor([956], device='cuda:0'), tensor([956], device='cuda:0'), tensor([78], device='cuda:0'), tensor([929], device='cuda:0'), tensor([793], device='cuda:0'), tensor([438], device='cuda:0'), tensor([793], device='cuda:0'), tensor([936], device='cuda:0'), tensor([793], device='cuda:0'), tensor([794], device='cuda:0'), tensor([714], device='cuda:0'), tensor([936], device='cuda:0'), tensor([43], device='cuda:0'), tensor([861], device='cuda:0'), tensor([689], device='cuda:0'), tensor([111], device='cuda:0'), tensor([861], device='cuda:0'), tensor([793], device='cuda:0'), tensor([599], device='cuda:0'), tensor([940], device='cuda:0'), tensor([599], device='cuda:0'), tensor([438], device='cuda:0'), tensor([793], device='cuda:0'), tensor([107], device='cuda:0'), tensor([929], device='cuda:0'), tensor([793], device='cuda:0'), tensor([107], device='cuda:0'), tensor([936], device='cuda:0'), tensor([929], device='cuda:0'), tensor([936], device='cuda:0'), tensor([818], device='cuda:0'), tensor([793], device='cuda:0'), tensor([956], device='cuda:0'), tensor([956], device='cuda:0'), tensor([793], device='cuda:0'), tensor([956], device='cuda:0'), tensor([126], device='cuda:0'), tensor([935], device='cuda:0'), tensor([714], device='cuda:0'), tensor([653], device='cuda:0')]
y_pred_l1: [tensor([943], device='cuda:0'), tensor([943], device='cuda:0'), tensor([940], device='cuda:0'), tensor([940], device='cuda:0'), tensor([938], device='cuda:0'), tensor([969], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0'), tensor([938], device='cuda:0'), tensor([942], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([943], device='cuda:0'), tensor([943], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([938], device='cuda:0'), tensor([901], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([928], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([928], device='cuda:0'), tensor([936], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([943], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([938], device='cuda:0'), tensor([943], device='cuda:0'), tensor([945], device='cuda:0'), tensor([942], device='cuda:0')]
y_pred_spsa: []
time: [0.039999961853027344, 0.6419999599456787, 0.007000446319580078, 0.00599980354309082, 0.26199984550476074, 0.0280001163482666, 0.6395642757415771, 0.006999969482421875, 0.00599980354309082, 0.26200056076049805, 0.02899956703186035, 0.6260008811950684, 0.005999088287353516, 0.006000518798828125, 0.26399850845336914, 0.0279998779296875, 0.6279997825622559, 0.0060002803802490234, 0.007000446319580078, 0.26199984550476074, 0.03000044822692871, 0.6329996585845947, 0.006000518798828125, 0.0060002803802490234, 0.2650008201599121, 0.0319979190826416, 0.6250004768371582, 0.0060002803802490234, 0.0070002079010009766, 0.26199960708618164, 0.02899932861328125, 0.6300017833709717, 0.006998777389526367, 0.006001710891723633, 0.2629988193511963, 0.02899956703186035, 0.6354727745056152, 0.0069997310638427734, 0.0060002803802490234, 0.26300048828125, 0.02899932861328125, 0.6280004978179932, 0.0060002803802490234, 0.006999969482421875, 0.2630000114440918, 0.027998924255371094, 0.6290016174316406, 0.00599980354309082, 0.0060002803802490234, 0.26400017738342285, 0.029000282287597656, 0.6249978542327881, 0.00599980354309082, 0.00599980354309082, 0.26399922370910645, 0.029000043869018555, 0.630000114440918, 0.006000041961669922, 0.006000041961669922, 0.26199984550476074, 0.028999805450439453, 0.6289997100830078, 0.006000041961669922, 0.0060002803802490234, 0.26200008392333984, 0.02899646759033203, 0.6310017108917236, 0.0070002079010009766, 0.006000041961669922, 0.2630000114440918, 0.02899932861328125, 0.6300003528594971, 0.005999565124511719, 0.0060002803802490234, 0.26199984550476074, 0.029000043869018555, 0.631000280380249, 0.006000041961669922, 0.006999969482421875, 0.2630019187927246, 0.028998136520385742, 0.6300020217895508, 0.0070002079010009766, 0.005999565124511719, 0.26599884033203125, 0.03000044822692871, 0.6740000247955322, 0.006000518798828125, 0.006000518798828125, 0.2670001983642578, 0.029000043869018555, 0.6330001354217529, 0.00599980354309082, 0.0060007572174072266, 0.2669999599456787, 0.0280001163482666, 0.6510000228881836, 0.006000518798828125, 0.0069997310638427734, 0.2650001049041748, 0.029000282287597656, 0.6369998455047607, 0.0060002803802490234, 0.006000041961669922, 0.26400041580200195, 0.02900075912475586, 0.6329982280731201, 0.0060002803802490234, 0.0059986114501953125, 0.2650010585784912, 0.029000043869018555, 0.628000020980835, 0.006000041961669922, 0.006999969482421875, 0.26399993896484375, 0.03000020980834961, 0.645784854888916, 0.0060002803802490234, 0.00599980354309082, 0.27100133895874023, 0.02900099754333496, 0.6650002002716064, 0.006000041961669922, 0.006000041961669922, 0.27299928665161133, 0.031000614166259766, 0.6749992370605469, 0.007000923156738281, 0.006999015808105469, 0.2689998149871826, 0.029999732971191406, 0.6450002193450928, 0.006000041961669922, 0.006000995635986328, 0.2759995460510254, 0.03100109100341797, 0.6889994144439697, 0.0060002803802490234, 0.0069997310638427734, 0.26600074768066406, 0.027997732162475586, 0.6300003528594971, 0.005999326705932617, 0.005999326705932617, 0.2629992961883545, 0.029999732971191406, 0.6629998683929443, 0.0070002079010009766, 0.00599980354309082, 0.26200008392333984, 0.02900075912475586, 0.663999080657959, 0.006000041961669922, 0.006000041961669922, 0.27100038528442383, 0.029996633529663086, 0.6570000648498535, 0.006999969482421875, 0.006000041961669922, 0.26599955558776855, 0.027999401092529297, 0.627000093460083, 0.006000518798828125, 0.006000041961669922, 0.26400041580200195, 0.029000043869018555, 0.6319999694824219, 0.00599980354309082, 0.005999088287353516, 0.2629990577697754, 0.029000043869018555, 0.6299998760223389, 0.005999565124511719, 0.007000446319580078, 0.2630000114440918, 0.02900075912475586, 0.6279993057250977, 0.0060007572174072266, 0.00699925422668457, 0.2630000114440918, 0.027997255325317383, 0.6279950141906738, 0.005999565124511719, 0.0070002079010009766, 0.26800012588500977, 0.031000137329101562, 0.6490004062652588, 0.0069997310638427734, 0.006999969482421875, 0.27100324630737305, 0.030001163482666016, 0.6409997940063477, 0.007000446319580078, 0.005999326705932617, 0.2740006446838379, 0.0299985408782959, 0.6750009059906006, 0.007000446319580078, 0.005998134613037109, 0.2739999294281006]
funcs_tested: 0
test acc on clean examples (%): 80.00
test acc on FGM adversarial examples (%): 0.00
test acc on PGD adversarial examples (%): 0.00
test acc on L2 adversarial examples (%): 0.00
test acc on HOP-SKIP-JUMP adversarial examples (%): 0.00
test acc on NOISE adversarial examples (%): 62.50
test acc on SEMANTIC adversarial examples (%): 10.00
test acc on L1 adversarial examples (%): 80.00
test acc on SPSA adversarial examples (%): 0.00

nb_test: 40
correct: 32
correct_fgm: 0
correct_pgd: 0
correct_l2: 0
correct_hop_skip: 0
correct_noise: 8
correct_semantic: 0
correct_l1: 27
correct_spsa: 0
y_pred: [tensor([317], device='cuda:0'), tensor([943], device='cuda:0'), tensor([936], device='cuda:0'), tensor([692], device='cuda:0'), tensor([943], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([945], device='cuda:0'), tensor([938], device='cuda:0'), tensor([936], device='cuda:0'), tensor([310], device='cuda:0'), tensor([943], device='cuda:0'), tensor([901], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([938], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([111], device='cuda:0'), tensor([945], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([885], device='cuda:0'), tensor([938], device='cuda:0'), tensor([938], device='cuda:0'), tensor([943], device='cuda:0'), tensor([936], device='cuda:0'), tensor([936], device='cuda:0'), tensor([111], device='cuda:0'), tensor([938], device='cuda:0'), tensor([943], device='cuda:0'), tensor([945], device='cuda:0'), tensor([938], device='cuda:0')]
y_pred_fgm: [tensor([911], device='cuda:0'), tensor([533], device='cuda:0'), tensor([109], device='cuda:0'), tensor([911], device='cuda:0'), tensor([735], device='cuda:0'), tensor([551], device='cuda:0'), tensor([109], device='cuda:0'), tensor([524], device='cuda:0'), tensor([551], device='cuda:0'), tensor([260], device='cuda:0'), tensor([109], device='cuda:0'), tensor([735], device='cuda:0'), tensor([735], device='cuda:0'), tensor([735], device='cuda:0'), tensor([220], device='cuda:0'), tensor([855], device='cuda:0'), tensor([260], device='cuda:0'), tensor([260], device='cuda:0'), tensor([911], device='cuda:0'), tensor([658], device='cuda:0'), tensor([109], device='cuda:0'), tensor([735], device='cuda:0'), tensor([533], device='cuda:0'), tensor([658], device='cuda:0'), tensor([911], device='cuda:0'), tensor([735], device='cuda:0'), tensor([735], device='cuda:0'), tensor([452], device='cuda:0'), tensor([735], device='cuda:0'), tensor([533], device='cuda:0'), tensor([260], device='cuda:0'), tensor([220], device='cuda:0'), tensor([735], device='cuda:0'), tensor([109], device='cuda:0'), tensor([109], device='cuda:0'), tensor([735], device='cuda:0'), tensor([220], device='cuda:0'), tensor([383], device='cuda:0'), tensor([911], device='cuda:0'), tensor([956], device='cuda:0')]
y_pred_pgd: [tensor([216], device='cuda:0'), tensor([735], device='cuda:0'), tensor([610], device='cuda:0'), tensor([94], device='cuda:0'), tensor([385], device='cuda:0'), tensor([712], device='cuda:0'), tensor([610], device='cuda:0'), tensor([246], device='cuda:0'), tensor([551], device='cuda:0'), tensor([956], device='cuda:0'), tensor([465], device='cuda:0'), tensor([465], device='cuda:0'), tensor([206], device='cuda:0'), tensor([11], device='cuda:0'), tensor([10], device='cuda:0'), tensor([662], device='cuda:0'), tensor([956], device='cuda:0'), tensor([574], device='cuda:0'), tensor([551], device='cuda:0'), tensor([522], device='cuda:0'), tensor([465], device='cuda:0'), tensor([163], device='cuda:0'), tensor([153], device='cuda:0'), tensor([662], device='cuda:0'), tensor([430], device='cuda:0'), tensor([465], device='cuda:0'), tensor([206], device='cuda:0'), tensor([465], device='cuda:0'), tensor([465], device='cuda:0'), tensor([11], device='cuda:0'), tensor([10], device='cuda:0'), tensor([956], device='cuda:0'), tensor([465], device='cuda:0'), tensor([610], device='cuda:0'), tensor([842], device='cuda:0'), tensor([89], device='cuda:0'), tensor([13], device='cuda:0'), tensor([22], device='cuda:0'), tensor([518], device='cuda:0'), tensor([956], device='cuda:0')]
y_pred_l2: []
y_pred_hop_skip: []
y_pred_noise: [tensor([310], device='cuda:0'), tensor([911], device='cuda:0'), tensor([793], device='cuda:0'), tensor([310], device='cuda:0'), tensor([295], device='cuda:0'), tensor([945], device='cuda:0'), tensor([793], device='cuda:0'), tensor([246], device='cuda:0'), tensor([925], device='cuda:0'), tensor([956], device='cuda:0'), tensor([529], device='cuda:0'), tensor([677], device='cuda:0'), tensor([943], device='cuda:0'), tensor([310], device='cuda:0'), tensor([574], device='cuda:0'), tensor([945], device='cuda:0'), tensor([956], device='cuda:0'), tensor([574], device='cuda:0'), tensor([945], device='cuda:0'), tensor([945], device='cuda:0'), tensor([956], device='cuda:0'), tensor([206], device='cuda:0'), tensor([310], device='cuda:0'), tensor([945], device='cuda:0'), tensor([945], device='cuda:0'), tensor([793], device='cuda:0'), tensor([5], device='cuda:0'), tensor([433], device='cuda:0'), tensor([5], device='cuda:0'), tensor([911], device='cuda:0'), tensor([574], device='cuda:0'), tensor([956], device='cuda:0'), tensor([5], device='cuda:0'), tensor([529], device='cuda:0'), tensor([793], device='cuda:0'), tensor([677], device='cuda:0'), tensor([956], device='cuda:0'), tensor([5], device='cuda:0'), tensor([945], device='cuda:0'), tensor([956], device='cuda:0')]
y_pred_semantic: [tensor([728], device='cuda:0'), tensor([929], device='cuda:0'), tensor([793], device='cuda:0'), tensor([728], device='cuda:0'), tensor([993], device='cuda:0'), tensor([712], device='cuda:0'), tensor([793], device='cuda:0'), tensor([461], device='cuda:0'), tensor([712], device='cuda:0'), tensor([126], device='cuda:0'), tensor([793], device='cuda:0'), tensor([692], device='cuda:0'), tensor([994], device='cuda:0'), tensor([692], device='cuda:0'), tensor([126], device='cuda:0'), tensor([419], device='cuda:0'), tensor([996], device='cuda:0'), tensor([126], device='cuda:0'), tensor([714], device='cuda:0'), tensor([714], device='cuda:0'), tensor([793], device='cuda:0'), tensor([994], device='cuda:0'), tensor([885], device='cuda:0'), tensor([443], device='cuda:0'), tensor([714], device='cuda:0'), tensor([793], device='cuda:0'), tensor([994], device='cuda:0'), tensor([793], device='cuda:0'), tensor([994], device='cuda:0'), tensor([434], device='cuda:0'), tensor([126], device='cuda:0'), tensor([126], device='cuda:0'), tensor([994], device='cuda:0'), tensor([793], device='cuda:0'), tensor([793], device='cuda:0'), tensor([728], device='cuda:0'), tensor([996], device='cuda:0'), tensor([303], device='cuda:0'), tensor([714], device='cuda:0'), tensor([994], device='cuda:0')]
y_pred_l1: [tensor([935], device='cuda:0'), tensor([943], device='cuda:0'), tensor([936], device='cuda:0'), tensor([310], device='cuda:0'), tensor([943], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([945], device='cuda:0'), tensor([996], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([943], device='cuda:0'), tensor([887], device='cuda:0'), tensor([938], device='cuda:0'), tensor([945], device='cuda:0'), tensor([996], device='cuda:0'), tensor([996], device='cuda:0'), tensor([945], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([885], device='cuda:0'), tensor([945], device='cuda:0'), tensor([945], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([936], device='cuda:0'), tensor([943], device='cuda:0'), tensor([901], device='cuda:0'), tensor([938], device='cuda:0'), tensor([938], device='cuda:0'), tensor([943], device='cuda:0'), tensor([936], device='cuda:0'), tensor([936], device='cuda:0'), tensor([111], device='cuda:0'), tensor([938], device='cuda:0'), tensor([114], device='cuda:0'), tensor([945], device='cuda:0'), tensor([956], device='cuda:0')]
y_pred_spsa: []
time: [0.03699827194213867, 1.3589961528778076, 0.0009987354278564453, 0.0009987354278564453, 0.049997806549072266, 0.04300403594970703, 1.3460001945495605, 0.00099945068359375, 0.00099945068359375, 0.050002336502075195, 0.04200005531311035, 1.3459997177124023, 0.0009999275207519531, 0.0010001659393310547, 0.04999971389770508, 0.0429995059967041, 1.3430004119873047, 0.0009999275207519531, 0.0010004043579101562, 0.05000019073486328, 0.04300427436828613, 1.3429999351501465, 0.0009996891021728516, 0.0010004043579101562, 0.04900002479553223, 0.04200029373168945, 1.3450007438659668, 0.0019998550415039062, 0.0010001659393310547, 0.04900002479553223, 0.042000532150268555, 1.3580002784729004, 0.0009999275207519531, 0.0010001659393310547, 0.05099964141845703, 0.04200029373168945, 1.3440003395080566, 0.0009999275207519531, 0.0009999275207519531, 0.04899907112121582, 0.042000532150268555, 1.3490004539489746, 0.0009999275207519531, 0.0009999275207519531, 0.04999995231628418, 0.04200005531311035, 1.3469996452331543, 0.0009996891021728516, 0.0010001659393310547, 0.04999971389770508, 0.04200100898742676, 1.3439996242523193, 0.002002239227294922, 0.0010004043579101562, 0.05000114440917969, 0.042000532150268555, 1.3439998626708984, 0.000997304916381836, 0.0010004043579101562, 0.04999971389770508, 0.04199790954589844, 1.3470003604888916, 0.0010001659393310547, 0.0010001659393310547, 0.049999237060546875, 0.043000221252441406, 1.3439991474151611, 0.0009999275207519531, 0.001001119613647461, 0.051000356674194336, 0.042000770568847656, 1.344027042388916, 0.0010001659393310547, 0.0010001659393310547, 0.04899930953979492, 0.042000532150268555, 1.3600001335144043, 0.0010008811950683594, 0.0010001659393310547, 0.050000667572021484, 0.041999101638793945, 1.3439991474151611, 0.001001596450805664, 0.0010004043579101562, 0.05000019073486328, 0.042000770568847656, 1.3495123386383057, 0.0010018348693847656, 0.0009999275207519531, 0.04999971389770508, 0.0429987907409668, 1.347510576248169, 0.0009996891021728516, 0.0010001659393310547, 0.05000019073486328, 0.043000221252441406, 1.3459420204162598, 0.0009992122650146484, 0.0010001659393310547, 0.050000905990600586, 0.042000532150268555, 1.3749995231628418, 0.0019996166229248047, 0.0010001659393310547, 0.04899954795837402, 0.04200029373168945, 1.3479995727539062, 0.0010001659393310547, 0.0010006427764892578, 0.05000019073486328, 0.04200029373168945, 1.3480005264282227, 0.0010001659393310547, 0.000997304916381836, 0.05000042915344238, 0.041999101638793945, 1.3460004329681396, 0.0009996891021728516, 0.0009999275207519531, 0.04899930953979492, 0.0429997444152832, 1.350999355316162, 0.0009992122650146484, 0.0009999275207519531, 0.04999947547912598, 0.04200005531311035, 1.3569998741149902, 0.0009996891021728516, 0.0010001659393310547, 0.05000042915344238, 0.04199934005737305, 1.3440005779266357, 0.0010001659393310547, 0.0, 0.04999995231628418, 0.04300260543823242, 1.3469979763031006, 0.0009999275207519531, 0.0009996891021728516, 0.04999947547912598, 0.04199934005737305, 1.348998785018921, 0.0010001659393310547, 0.0010006427764892578, 0.04899954795837402, 0.04200005531311035, 1.3429992198944092, 0.0010004043579101562, 0.0009996891021728516, 0.04899954795837402, 0.04199981689453125, 1.3439998626708984, 0.0010001659393310547, 0.0010006427764892578, 0.04999995231628418, 0.04199981689453125, 1.3459999561309814, 0.0010001659393310547, 0.0009999275207519531, 0.04900002479553223, 0.043000221252441406, 1.3450000286102295, 0.0009999275207519531, 0.0010004043579101562, 0.04900002479553223, 0.042002201080322266, 1.3450026512145996, 0.0010025501251220703, 0.001001119613647461, 0.0500028133392334, 0.04300212860107422, 1.3420016765594482, 0.0010023117065429688, 0.0010023117065429688, 0.0500025749206543, 0.042001962661743164, 1.3565125465393066, 0.0010023117065429688, 0.0010025501251220703, 0.05100131034851074, 0.04200267791748047, 1.3430027961730957, 0.0010008811950683594, 0.0010025501251220703, 0.0500035285949707, 0.04300212860107422, 1.3490025997161865, 0.0010013580322265625, 0.0010025501251220703, 0.050000905990600586, 0.04200291633605957, 1.3490023612976074, 0.0010023117065429688, 0.0010025501251220703, 0.0500025749206543, 0.04200172424316406, 1.3450024127960205, 0.0010023117065429688, 0.0010027885437011719, 0.049997806549072266]
funcs_tested: 0
test acc on clean examples (%): 80.00
test acc on FGM adversarial examples (%): 0.00
test acc on PGD adversarial examples (%): 0.00
test acc on L2 adversarial examples (%): 0.00
test acc on HOP-SKIP-JUMP adversarial examples (%): 0.00
test acc on NOISE adversarial examples (%): 20.00
test acc on SEMANTIC adversarial examples (%): 0.00
test acc on L1 adversarial examples (%): 67.50
test acc on SPSA adversarial examples (%): 0.00

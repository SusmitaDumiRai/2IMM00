nb_test: 65
correct: 51
correct_fgm: 6
correct_pgd: 5
correct_l2: 0
correct_hop_skip: 0
correct_noise: 54
correct_semantic: 0
correct_l1: 52
correct_spsa: 0
y_pred: [tensor([234], device='cuda:0'), tensor([161], device='cuda:0'), tensor([249], device='cuda:0'), tensor([162], device='cuda:0'), tensor([232], device='cuda:0'), tensor([161], device='cuda:0'), tensor([162], device='cuda:0'), tensor([195], device='cuda:0'), tensor([162], device='cuda:0'), tensor([167], device='cuda:0'), tensor([162], device='cuda:0'), tensor([167], device='cuda:0'), tensor([232], device='cuda:0'), tensor([162], device='cuda:0'), tensor([161], device='cuda:0'), tensor([153], device='cuda:0'), tensor([168], device='cuda:0'), tensor([211], device='cuda:0'), tensor([250], device='cuda:0'), tensor([162], device='cuda:0'), tensor([249], device='cuda:0'), tensor([167], device='cuda:0'), tensor([232], device='cuda:0'), tensor([232], device='cuda:0'), tensor([162], device='cuda:0'), tensor([168], device='cuda:0'), tensor([249], device='cuda:0'), tensor([162], device='cuda:0'), tensor([249], device='cuda:0'), tensor([168], device='cuda:0'), tensor([249], device='cuda:0'), tensor([153], device='cuda:0'), tensor([166], device='cuda:0'), tensor([166], device='cuda:0'), tensor([153], device='cuda:0'), tensor([208], device='cuda:0'), tensor([153], device='cuda:0'), tensor([162], device='cuda:0'), tensor([153], device='cuda:0'), tensor([266], device='cuda:0'), tensor([153], device='cuda:0'), tensor([161], device='cuda:0'), tensor([232], device='cuda:0'), tensor([161], device='cuda:0'), tensor([153], device='cuda:0'), tensor([153], device='cuda:0'), tensor([167], device='cuda:0'), tensor([153], device='cuda:0'), tensor([266], device='cuda:0'), tensor([250], device='cuda:0'), tensor([249], device='cuda:0'), tensor([249], device='cuda:0'), tensor([232], device='cuda:0'), tensor([153], device='cuda:0'), tensor([163], device='cuda:0'), tensor([161], device='cuda:0'), tensor([161], device='cuda:0'), tensor([232], device='cuda:0'), tensor([168], device='cuda:0'), tensor([162], device='cuda:0'), tensor([166], device='cuda:0'), tensor([167], device='cuda:0'), tensor([168], device='cuda:0'), tensor([167], device='cuda:0'), tensor([204], device='cuda:0')]
y_pred_fgm: [tensor([151], device='cuda:0'), tensor([275], device='cuda:0'), tensor([269], device='cuda:0'), tensor([166], device='cuda:0'), tensor([231], device='cuda:0'), tensor([182], device='cuda:0'), tensor([202], device='cuda:0'), tensor([232], device='cuda:0'), tensor([247], device='cuda:0'), tensor([166], device='cuda:0'), tensor([169], device='cuda:0'), tensor([162], device='cuda:0'), tensor([217], device='cuda:0'), tensor([161], device='cuda:0'), tensor([212], device='cuda:0'), tensor([155], device='cuda:0'), tensor([211], device='cuda:0'), tensor([168], device='cuda:0'), tensor([249], device='cuda:0'), tensor([168], device='cuda:0'), tensor([250], device='cuda:0'), tensor([173], device='cuda:0'), tensor([261], device='cuda:0'), tensor([230], device='cuda:0'), tensor([161], device='cuda:0'), tensor([163], device='cuda:0'), tensor([250], device='cuda:0'), tensor([161], device='cuda:0'), tensor([250], device='cuda:0'), tensor([184], device='cuda:0'), tensor([248], device='cuda:0'), tensor([265], device='cuda:0'), tensor([218], device='cuda:0'), tensor([284], device='cuda:0'), tensor([204], device='cuda:0'), tensor([237], device='cuda:0'), tensor([443], device='cuda:0'), tensor([166], device='cuda:0'), tensor([332], device='cuda:0'), tensor([204], device='cuda:0'), tensor([170], device='cuda:0'), tensor([162], device='cuda:0'), tensor([230], device='cuda:0'), tensor([162], device='cuda:0'), tensor([265], device='cuda:0'), tensor([204], device='cuda:0'), tensor([166], device='cuda:0'), tensor([266], device='cuda:0'), tensor([229], device='cuda:0'), tensor([249], device='cuda:0'), tensor([272], device='cuda:0'), tensor([362], device='cuda:0'), tensor([267], device='cuda:0'), tensor([229], device='cuda:0'), tensor([168], device='cuda:0'), tensor([166], device='cuda:0'), tensor([162], device='cuda:0'), tensor([338], device='cuda:0'), tensor([209], device='cuda:0'), tensor([167], device='cuda:0'), tensor([161], device='cuda:0'), tensor([218], device='cuda:0'), tensor([211], device='cuda:0'), tensor([173], device='cuda:0'), tensor([203], device='cuda:0')]
y_pred_pgd: [tensor([151], device='cuda:0'), tensor([177], device='cuda:0'), tensor([289], device='cuda:0'), tensor([246], device='cuda:0'), tensor([249], device='cuda:0'), tensor([222], device='cuda:0'), tensor([222], device='cuda:0'), tensor([171], device='cuda:0'), tensor([242], device='cuda:0'), tensor([218], device='cuda:0'), tensor([246], device='cuda:0'), tensor([162], device='cuda:0'), tensor([156], device='cuda:0'), tensor([161], device='cuda:0'), tensor([212], device='cuda:0'), tensor([155], device='cuda:0'), tensor([211], device='cuda:0'), tensor([161], device='cuda:0'), tensor([249], device='cuda:0'), tensor([159], device='cuda:0'), tensor([253], device='cuda:0'), tensor([173], device='cuda:0'), tensor([269], device='cuda:0'), tensor([372], device='cuda:0'), tensor([169], device='cuda:0'), tensor([163], device='cuda:0'), tensor([176], device='cuda:0'), tensor([161], device='cuda:0'), tensor([248], device='cuda:0'), tensor([700], device='cuda:0'), tensor([537], device='cuda:0'), tensor([212], device='cuda:0'), tensor([161], device='cuda:0'), tensor([151], device='cuda:0'), tensor([204], device='cuda:0'), tensor([162], device='cuda:0'), tensor([499], device='cuda:0'), tensor([172], device='cuda:0'), tensor([184], device='cuda:0'), tensor([204], device='cuda:0'), tensor([170], device='cuda:0'), tensor([208], device='cuda:0'), tensor([700], device='cuda:0'), tensor([162], device='cuda:0'), tensor([276], device='cuda:0'), tensor([155], device='cuda:0'), tensor([245], device='cuda:0'), tensor([756], device='cuda:0'), tensor([257], device='cuda:0'), tensor([249], device='cuda:0'), tensor([272], device='cuda:0'), tensor([362], device='cuda:0'), tensor([177], device='cuda:0'), tensor([155], device='cuda:0'), tensor([168], device='cuda:0'), tensor([162], device='cuda:0'), tensor([167], device='cuda:0'), tensor([256], device='cuda:0'), tensor([178], device='cuda:0'), tensor([246], device='cuda:0'), tensor([161], device='cuda:0'), tensor([218], device='cuda:0'), tensor([246], device='cuda:0'), tensor([173], device='cuda:0'), tensor([203], device='cuda:0')]
y_pred_l2: []
y_pred_hop_skip: []
y_pred_noise: [tensor([237], device='cuda:0'), tensor([161], device='cuda:0'), tensor([249], device='cuda:0'), tensor([162], device='cuda:0'), tensor([232], device='cuda:0'), tensor([161], device='cuda:0'), tensor([162], device='cuda:0'), tensor([195], device='cuda:0'), tensor([162], device='cuda:0'), tensor([167], device='cuda:0'), tensor([162], device='cuda:0'), tensor([167], device='cuda:0'), tensor([232], device='cuda:0'), tensor([162], device='cuda:0'), tensor([161], device='cuda:0'), tensor([153], device='cuda:0'), tensor([168], device='cuda:0'), tensor([168], device='cuda:0'), tensor([250], device='cuda:0'), tensor([162], device='cuda:0'), tensor([249], device='cuda:0'), tensor([167], device='cuda:0'), tensor([232], device='cuda:0'), tensor([232], device='cuda:0'), tensor([162], device='cuda:0'), tensor([168], device='cuda:0'), tensor([249], device='cuda:0'), tensor([162], device='cuda:0'), tensor([249], device='cuda:0'), tensor([168], device='cuda:0'), tensor([249], device='cuda:0'), tensor([153], device='cuda:0'), tensor([166], device='cuda:0'), tensor([171], device='cuda:0'), tensor([153], device='cuda:0'), tensor([162], device='cuda:0'), tensor([153], device='cuda:0'), tensor([162], device='cuda:0'), tensor([153], device='cuda:0'), tensor([153], device='cuda:0'), tensor([202], device='cuda:0'), tensor([161], device='cuda:0'), tensor([232], device='cuda:0'), tensor([161], device='cuda:0'), tensor([153], device='cuda:0'), tensor([153], device='cuda:0'), tensor([167], device='cuda:0'), tensor([153], device='cuda:0'), tensor([265], device='cuda:0'), tensor([250], device='cuda:0'), tensor([249], device='cuda:0'), tensor([249], device='cuda:0'), tensor([232], device='cuda:0'), tensor([153], device='cuda:0'), tensor([168], device='cuda:0'), tensor([161], device='cuda:0'), tensor([161], device='cuda:0'), tensor([232], device='cuda:0'), tensor([168], device='cuda:0'), tensor([162], device='cuda:0'), tensor([161], device='cuda:0'), tensor([167], device='cuda:0'), tensor([159], device='cuda:0'), tensor([167], device='cuda:0'), tensor([194], device='cuda:0')]
y_pred_semantic: [tensor([227], device='cuda:0'), tensor([171], device='cuda:0'), tensor([223], device='cuda:0'), tensor([245], device='cuda:0'), tensor([361], device='cuda:0'), tensor([210], device='cuda:0'), tensor([208], device='cuda:0'), tensor([267], device='cuda:0'), tensor([180], device='cuda:0'), tensor([246], device='cuda:0'), tensor([205], device='cuda:0'), tensor([246], device='cuda:0'), tensor([224], device='cuda:0'), tensor([178], device='cuda:0'), tensor([178], device='cuda:0'), tensor([154], device='cuda:0'), tensor([178], device='cuda:0'), tensor([246], device='cuda:0'), tensor([362], device='cuda:0'), tensor([178], device='cuda:0'), tensor([280], device='cuda:0'), tensor([971], device='cuda:0'), tensor([203], device='cuda:0'), tensor([257], device='cuda:0'), tensor([208], device='cuda:0'), tensor([178], device='cuda:0'), tensor([174], device='cuda:0'), tensor([180], device='cuda:0'), tensor([224], device='cuda:0'), tensor([178], device='cuda:0'), tensor([341], device='cuda:0'), tensor([154], device='cuda:0'), tensor([195], device='cuda:0'), tensor([723], device='cuda:0'), tensor([252], device='cuda:0'), tensor([179], device='cuda:0'), tensor([399], device='cuda:0'), tensor([178], device='cuda:0'), tensor([332], device='cuda:0'), tensor([169], device='cuda:0'), tensor([252], device='cuda:0'), tensor([163], device='cuda:0'), tensor([223], device='cuda:0'), tensor([163], device='cuda:0'), tensor([204], device='cuda:0'), tensor([204], device='cuda:0'), tensor([246], device='cuda:0'), tensor([209], device='cuda:0'), tensor([244], device='cuda:0'), tensor([284], device='cuda:0'), tensor([261], device='cuda:0'), tensor([362], device='cuda:0'), tensor([203], device='cuda:0'), tensor([154], device='cuda:0'), tensor([178], device='cuda:0'), tensor([178], device='cuda:0'), tensor([210], device='cuda:0'), tensor([338], device='cuda:0'), tensor([178], device='cuda:0'), tensor([208], device='cuda:0'), tensor([163], device='cuda:0'), tensor([173], device='cuda:0'), tensor([176], device='cuda:0'), tensor([171], device='cuda:0'), tensor([201], device='cuda:0')]
y_pred_l1: [tensor([234], device='cuda:0'), tensor([161], device='cuda:0'), tensor([249], device='cuda:0'), tensor([166], device='cuda:0'), tensor([232], device='cuda:0'), tensor([161], device='cuda:0'), tensor([162], device='cuda:0'), tensor([232], device='cuda:0'), tensor([162], device='cuda:0'), tensor([167], device='cuda:0'), tensor([162], device='cuda:0'), tensor([167], device='cuda:0'), tensor([232], device='cuda:0'), tensor([162], device='cuda:0'), tensor([161], device='cuda:0'), tensor([153], device='cuda:0'), tensor([168], device='cuda:0'), tensor([168], device='cuda:0'), tensor([250], device='cuda:0'), tensor([162], device='cuda:0'), tensor([249], device='cuda:0'), tensor([167], device='cuda:0'), tensor([232], device='cuda:0'), tensor([232], device='cuda:0'), tensor([162], device='cuda:0'), tensor([168], device='cuda:0'), tensor([249], device='cuda:0'), tensor([162], device='cuda:0'), tensor([249], device='cuda:0'), tensor([168], device='cuda:0'), tensor([249], device='cuda:0'), tensor([153], device='cuda:0'), tensor([166], device='cuda:0'), tensor([172], device='cuda:0'), tensor([153], device='cuda:0'), tensor([208], device='cuda:0'), tensor([153], device='cuda:0'), tensor([162], device='cuda:0'), tensor([204], device='cuda:0'), tensor([194], device='cuda:0'), tensor([204], device='cuda:0'), tensor([161], device='cuda:0'), tensor([232], device='cuda:0'), tensor([161], device='cuda:0'), tensor([153], device='cuda:0'), tensor([153], device='cuda:0'), tensor([167], device='cuda:0'), tensor([153], device='cuda:0'), tensor([266], device='cuda:0'), tensor([250], device='cuda:0'), tensor([249], device='cuda:0'), tensor([249], device='cuda:0'), tensor([232], device='cuda:0'), tensor([153], device='cuda:0'), tensor([168], device='cuda:0'), tensor([161], device='cuda:0'), tensor([161], device='cuda:0'), tensor([232], device='cuda:0'), tensor([168], device='cuda:0'), tensor([162], device='cuda:0'), tensor([161], device='cuda:0'), tensor([167], device='cuda:0'), tensor([159], device='cuda:0'), tensor([167], device='cuda:0'), tensor([153], device='cuda:0')]
y_pred_spsa: []
time: [0.03125119209289551, 0.6704444885253906, 0.0, 0.0, 0.2539217472076416, 0.0312497615814209, 0.6237361431121826, 0.0, 0.015633106231689453, 0.26289844512939453, 0.030205965042114258, 0.610938549041748, 0.0156252384185791, 0.0050067901611328125, 0.26304078102111816, 0.031262874603271484, 0.6641113758087158, 0.006508350372314453, 0.0, 0.2627406120300293, 0.03126025199890137, 0.6167893409729004, 0.015626907348632812, 0.0, 0.26955223083496094, 0.025647878646850586, 0.6484849452972412, 0.015626192092895508, 0.0, 0.2539224624633789, 0.028109073638916016, 0.6251931190490723, 0.00650787353515625, 0.0, 0.26304173469543457, 0.02564239501953125, 0.6325623989105225, 0.0, 0.015625, 0.2641022205352783, 0.0312504768371582, 0.6391136646270752, 0.0, 0.015625476837158203, 0.2695426940917969, 0.031250715255737305, 0.6390986442565918, 0.015623807907104492, 0.0, 0.26955604553222656, 0.03147292137145996, 0.6374294757843018, 0.015624761581420898, 0.0, 0.2695434093475342, 0.03908562660217285, 0.6302614212036133, 0.015633583068847656, 0.0, 0.2803230285644531, 0.015624523162841797, 0.6550037860870361, 0.0, 0.015636682510375977, 0.31612730026245117, 0.015624284744262695, 0.6391663551330566, 0.015625476837158203, 0.0, 0.26953911781311035, 0.015623807907104492, 0.632845401763916, 0.0, 0.0, 0.26955485343933105, 0.022137165069580078, 0.6328752040863037, 0.015626192092895508, 0.0, 0.2691385746002197, 0.0312497615814209, 0.6169354915618896, 0.0, 0.0, 0.26303863525390625, 0.028113603591918945, 0.6183569431304932, 0.0156252384185791, 0.0, 0.2695748805999756, 0.031245946884155273, 0.6391048431396484, 0.0, 0.015624761581420898, 0.25391483306884766, 0.03124856948852539, 0.617218017578125, 0.015625, 0.006506443023681641, 0.24723482131958008, 0.01563739776611328, 0.632845401763916, 0.0, 0.0156252384185791, 0.2695581912994385, 0.031250953674316406, 0.6257755756378174, 0.0, 0.01563262939453125, 0.2610297203063965, 0.03217506408691406, 0.6265966892242432, 0.0, 0.015624284744262695, 0.2539210319519043, 0.031249523162841797, 0.6235177516937256, 0.0, 0.01563239097595215, 0.2474043369293213, 0.02811598777770996, 0.6185119152069092, 0.0, 0.0, 0.2692546844482422, 0.0312502384185791, 0.6233599185943604, 0.0, 0.0, 0.2630448341369629, 0.0312502384185791, 0.6172218322753906, 0.015624523162841797, 0.0, 0.269603967666626, 0.03013920783996582, 0.6240742206573486, 0.0, 0.0, 0.26955151557922363, 0.031248092651367188, 0.6668951511383057, 0.0, 0.010968208312988281, 0.2694406509399414, 0.025643587112426758, 0.6172311305999756, 0.015625, 0.0, 0.26941514015197754, 0.031247377395629883, 0.6237318515777588, 0.0, 0.015632152557373047, 0.26303958892822266, 0.032161712646484375, 0.61104416847229, 0.015625476837158203, 0.0, 0.2539207935333252, 0.015623807907104492, 0.6392836570739746, 0.0, 0.0, 0.2630460262298584, 0.02812957763671875, 0.623013973236084, 0.015623092651367188, 0.0, 0.266709566116333, 0.031250953674316406, 0.6392800807952881, 0.0, 0.015624761581420898, 0.2601959705352783, 0.031249046325683594, 0.6328589916229248, 0.006507396697998047, 0.0, 0.2630436420440674, 0.03215765953063965, 0.6108279228210449, 0.0, 0.0, 0.26955580711364746, 0.031249523162841797, 0.6236019134521484, 0.015633821487426758, 0.0, 0.26303529739379883, 0.025643587112426758, 0.6328694820404053, 0.0, 0.015628576278686523, 0.26929211616516113, 0.0312497615814209, 0.6097531318664551, 0.015624523162841797, 0.0, 0.2695460319519043, 0.031250715255737305, 0.6233518123626709, 0.01563239097595215, 0.0, 0.2630326747894287, 0.015635967254638672, 0.616995096206665, 0.0, 0.015624761581420898, 0.25377583503723145, 0.0312502384185791, 0.6236660480499268, 0.01563239097595215, 0.0, 0.2630319595336914, 0.028121471405029297, 0.623072624206543, 0.015620946884155273, 0.0, 0.28487491607666016, 0.031248092651367188, 0.6172235012054443, 0.0065081119537353516, 0.0, 0.26304054260253906, 0.03220844268798828, 0.6225745677947998, 0.0, 0.015622615814208984, 0.25392842292785645, 0.030141115188598633, 0.6071298122406006, 0.01702427864074707, 0.0, 0.2680494785308838, 0.03125119209289551, 0.6184229850769043, 0.005007028579711914, 0.0, 0.2630460262298584, 0.03219175338745117, 0.6354179382324219, 0.0, 0.015624761581420898, 0.2849299907684326, 0.031243085861206055, 0.6234416961669922, 0.015635013580322266, 0.0, 0.2630331516265869, 0.031249046325683594, 0.6328530311584473, 0.0, 0.015624284744262695, 0.25392770767211914, 0.03217005729675293, 0.6178665161132812, 0.015625, 0.006507158279418945, 0.24741482734680176, 0.02564072608947754, 0.6169295310974121, 0.015625, 0.0, 0.2695484161376953, 0.031249046325683594, 0.6354923248291016, 0.0, 0.015628337860107422, 0.27271008491516113, 0.031246662139892578, 0.639244794845581, 0.0, 0.0, 0.26305103302001953, 0.031249046325683594, 0.632864236831665, 0.015624761581420898, 0.006508350372314453, 0.27051448822021484, 0.03125166893005371, 0.6185412406921387, 0.015624761581420898, 0.0, 0.26927614212036133, 0.031250715255737305, 0.6237444877624512, 0.0, 0.015634536743164062, 0.2642993927001953, 0.031264305114746094, 0.6328644752502441, 0.0, 0.015625953674316406, 0.2690436840057373, 0.030124425888061523, 0.6427981853485107, 0.0, 0.015625476837158203, 0.2539083957672119, 0.031247377395629883, 0.617232084274292, 0.0065076351165771484, 0.0, 0.2643594741821289, 0.015636444091796875, 0.6325998306274414, 0.0, 0.0, 0.2539334297180176, 0.03775906562805176, 0.6169981956481934, 0.015625715255737305, 0.0, 0.26958203315734863, 0.03124833106994629, 0.6171145439147949, 0.006508350372314453, 0.0, 0.270719051361084, 0.025643110275268555, 0.6326451301574707, 0.0, 0.015627145767211914, 0.2536280155181885]
funcs_tested: 0
test acc on clean examples (%): 78.46
test acc on FGM adversarial examples (%): 9.23
test acc on PGD adversarial examples (%): 7.69
test acc on L2 adversarial examples (%): 0.00
test acc on HOP-SKIP-JUMP adversarial examples (%): 0.00
test acc on NOISE adversarial examples (%): 83.08
test acc on SEMANTIC adversarial examples (%): 0.00
test acc on L1 adversarial examples (%): 80.00
test acc on SPSA adversarial examples (%): 0.00
